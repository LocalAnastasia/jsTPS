{"ast":null,"code":"var _jsxFileName = \"/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/components/list_screen/ListItemsTable.js\";\nimport React, { Component } from 'react';\nimport ListItemCard from './ListItemCard';\nexport class ListItemsTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: this.props.todoList.items,\n      taskSortToggle: false,\n      dueDateSortToggle: false,\n      completedSortToggle: false\n    };\n\n    this.updateIndices = items => {\n      for (var i = 0; i < items.length; i++) {\n        items[i].key = i;\n      }\n\n      return items;\n    };\n\n    this.sortByTask = () => {\n      let newItems = [...this.state.items];\n\n      if (this.state.taskSortToggle) {\n        newItems.sort((a, b) => a.description > b.description ? 1 : -1);\n      } else {\n        newItems.sort((a, b) => a.description > b.description ? -1 : 1);\n      }\n\n      newItems = this.updateIndices(newItems);\n      this.setState({\n        items: newItems\n      });\n      this.setState({\n        taskSortToggle: !this.state.taskSortToggle\n      });\n    };\n\n    this.sortByDueDate = () => {\n      let newItems = [...this.state.items];\n\n      if (this.state.dueDateSortToggle) {\n        newItems.sort((a, b) => a.due_date > b.due_date ? 1 : -1);\n      } else {\n        newItems.sort((a, b) => a.due_date > b.due_date ? -1 : 1);\n      }\n\n      newItems = this.updateIndices(newItems);\n      this.setState({\n        items: newItems\n      });\n      this.setState({\n        dueDateSortToggle: !this.state.dueDateSortToggle\n      });\n    };\n\n    this.sortByCompleted = () => {\n      let newItems = [...this.state.items];\n\n      if (this.state.completedSortToggle) {\n        newItems.sort((a, b) => a.completed > b.completed ? 1 : -1);\n      } else {\n        newItems.sort((a, b) => a.completed > b.completed ? -1 : 1);\n      }\n\n      newItems = this.updateIndices(newItems);\n      this.setState({\n        items: newItems\n      });\n      this.setState({\n        completedSortToggle: !this.state.completedSortToggle\n      });\n    };\n\n    this.swapItems = (items, key1, key2) => {\n      console.log(items);\n      let temp = items[key1];\n      items[key1] = items[key2];\n      items[key2] = temp;\n      items = this.updateIndices(items);\n      return items;\n    };\n\n    this.moveItemUp = item => {\n      let newItems = [...this.state.items];\n\n      if (item.key > 0) {\n        newItems = this.swapItems(newItems, item.key, newItems[item.key - 1]);\n      }\n\n      this.setState({\n        items: newItems\n      });\n    };\n\n    this.moveItemDown = item => {\n      let newItems = [...this.state.items];\n\n      if (item.key < newItems.length - 1) {\n        newItems = this.swapItems(...newItems, item.key, newItems[item.key + 1]);\n      }\n\n      this.setState({\n        items: newItems\n      });\n    };\n\n    this.deleteItem = item => {\n      let newItems = [...this.state.items].filter(x => x.key !== item.key);\n      newItems = this.updateIndices(newItems);\n      this.setState({\n        items: newItems\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"list_items_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list_item_header_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list_item_task_header\",\n      onClick: this.sortByTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Task\"), React.createElement(\"div\", {\n      className: \"list_item_due_date_header\",\n      onClick: this.sortByDueDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Due Date\"), React.createElement(\"div\", {\n      className: \"list_item_status_header\",\n      onClick: this.sortByCompleted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Status\")), this.state.items.map(todoItem => React.createElement(ListItemCard, {\n      key: todoItem.key,\n      listItem: todoItem,\n      isFirst: todoItem.key === 0,\n      isLast: todoItem.key === this.state.items.length - 1,\n      moveItemUp: this.moveItemUp,\n      moveItemDown: this.moveItemDown,\n      deleteItem: this.deleteItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default ListItemsTable;","map":{"version":3,"sources":["/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/components/list_screen/ListItemsTable.js"],"names":["React","Component","ListItemCard","ListItemsTable","state","items","props","todoList","taskSortToggle","dueDateSortToggle","completedSortToggle","updateIndices","i","length","key","sortByTask","newItems","sort","a","b","description","setState","sortByDueDate","due_date","sortByCompleted","completed","swapItems","key1","key2","console","log","temp","moveItemUp","item","moveItemDown","deleteItem","filter","x","render","map","todoItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ListItemCard from './ListItemCard'\n\nexport class ListItemsTable extends Component {\n\n    state = {\n        items: this.props.todoList.items,\n        taskSortToggle: false,\n        dueDateSortToggle: false,\n        completedSortToggle: false\n    }\n\n    updateIndices = (items) => {\n        for(var i = 0; i < items.length; i++) {\n            items[i].key = i;\n        }\n        return items;\n    }\n    sortByTask = () => {\n        let newItems = [...this.state.items];\n        if (this.state.taskSortToggle){\n            newItems.sort((a, b) =>  a.description > b.description ? 1 : -1);\n        }\n        else{\n            newItems.sort((a, b) =>  a.description > b.description ? -1 : 1);\n        }\n        newItems = this.updateIndices(newItems);\n        this.setState({items: newItems});\n        this.setState({taskSortToggle: !this.state.taskSortToggle});\n    }\n\n    sortByDueDate = () => {\n        let newItems = [...this.state.items];\n        if (this.state.dueDateSortToggle){\n            newItems.sort((a, b) =>  a.due_date > b.due_date ? 1 : -1);\n        }\n        else{\n            newItems.sort((a, b) =>  a.due_date > b.due_date ? -1 : 1);\n        }\n        newItems = this.updateIndices(newItems);\n        this.setState({items: newItems});\n        this.setState({dueDateSortToggle: !this.state.dueDateSortToggle});\n    }\n\n    sortByCompleted = () => {\n        let newItems = [...this.state.items];\n        if (this.state.completedSortToggle){\n            newItems.sort((a, b) =>  a.completed > b.completed ? 1 : -1);\n        }\n        else{\n            newItems.sort((a, b) =>  a.completed > b.completed ? -1 : 1);\n        }\n        newItems = this.updateIndices(newItems);\n        this.setState({items: newItems});\n        this.setState({completedSortToggle: !this.state.completedSortToggle});\n    }\n\n    swapItems = (items, key1, key2) => {\n        console.log(items);\n        let temp = items[key1];\n        items[key1] = items[key2];\n        items[key2] = temp;\n        items = this.updateIndices(items);\n        return items;\n    }\n    moveItemUp = (item) => {\n        let newItems = [...this.state.items];\n        if (item.key > 0){\n            newItems = this.swapItems(newItems, item.key, newItems[item.key - 1]);\n        }\n        this.setState({items: newItems});\n    }\n\n    moveItemDown = (item) => {\n        let newItems = [...this.state.items];\n        if (item.key < newItems.length - 1){\n            newItems = this.swapItems(...newItems, item.key, newItems[item.key + 1]);\n        }\n        this.setState({items: newItems});\n    }\n\n    deleteItem = (item) => {\n        let newItems = [...this.state.items].filter(x => x.key !== item.key);\n        newItems = this.updateIndices(newItems);\n        this.setState({items: newItems});\n    }\n\n    render() {\n        return (\n            <div id=\"list_items_container\">\n                <div className=\"list_item_header_card\">\n                    <div className=\"list_item_task_header\" onClick={this.sortByTask}>Task</div>\n                    <div className=\"list_item_due_date_header\" onClick={this.sortByDueDate}>Due Date</div>\n                    <div className=\"list_item_status_header\" onClick={this.sortByCompleted}>Status</div>\n                </div>\n                {\n                    this.state.items.map((todoItem)=>(\n                        <ListItemCard \n                            key={todoItem.key}\n                            listItem={todoItem}\n                            isFirst={todoItem.key === 0}\n                            isLast={todoItem.key === this.state.items.length - 1}\n                            moveItemUp={this.moveItemUp}\n                            moveItemDown={this.moveItemDown}\n                            deleteItem={this.deleteItem} \n                            />\n                    ))\n                }\n            </div>\n        )\n    }\n}\n\nexport default ListItemsTable\n"]},"metadata":{},"sourceType":"module"}