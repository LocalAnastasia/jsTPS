{"ast":null,"code":"var _jsxFileName = \"/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/components/list_screen/ListScreen.js\";\nimport React, { Component } from 'react';\nimport ListHeading from './ListHeading';\nimport ListItemsTable from './ListItemsTable';\nimport ListTrash from './ListTrash';\nimport PropTypes from 'prop-types';\nexport class ListScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalIsVisible: false,\n      todoList: this.props.todoList\n    };\n\n    this.updateList = items => {\n      let newList = this.state.todoList;\n      console.log(newList);\n      newList.items = items;\n      this.setState({\n        todoList: newList\n      });\n    };\n\n    this.setListOwner = e => {\n      let newList = this.props.todoList;\n      newList.setOwner(e.target.value);\n      this.setState({\n        todoList: newList\n      });\n    };\n\n    this.setListName = e => {\n      let newList = this.props.todoList;\n      newList.setName(e.target.value);\n      this.setState({\n        todoList: newList\n      });\n    };\n\n    this.showModal = () => {\n      this.setState({\n        modalIsVisible: true\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        modalIsVisible: false\n      });\n    };\n\n    this.deleteList = () => {\n      this.hideModal();\n      this.props.deleteList();\n    };\n  }\n\n  getListName() {\n    if (this.props.todoList) {\n      let name = this.props.todoList.getName();\n      return name;\n    } else return \"\";\n  }\n\n  getListOwner() {\n    if (this.props.todoList) {\n      let owner = this.props.todoList.getOwner();\n      return owner;\n    }\n  }\n\n  getModal() {\n    return this.state.modalIsVisible ? \"modal is_visible\" : \"modal\";\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"todo_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(ListHeading, {\n      goHome: this.props.goHome,\n      todoList: this.state.todoList,\n      updateListChanges: this.props.updateListChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(ListTrash, {\n      showModal: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"list_details_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"list_details_name_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_name_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      onChange: this.setListName,\n      defaultValue: this.getListName(),\n      type: \"text\",\n      id: \"list_name_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"list_details_owner_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_owner_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Owner:\"), React.createElement(\"input\", {\n      onChange: this.setListOwner,\n      defaultValue: this.getListOwner(),\n      type: \"text\",\n      id: \"list_owner_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))), React.createElement(ListItemsTable, {\n      goItem: this.props.goItem,\n      todoList: this.props.todoList,\n      updateList: this.updateList,\n      createNewItem: this.props.createNewItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: this.getModal(),\n      \"data-animation\": \"slideInOutLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal_dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"modal_header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Delete list?\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"modal_footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Are you sure you want to delete this list?\"), React.createElement(\"div\", {\n      id: \"modal_dialog_button_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"modal_dialog_button\",\n      onClick: this.deleteList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"YES\"), React.createElement(\"button\", {\n      className: \"modal_dialog_button\",\n      onClick: this.hideModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"NO\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"This list will not be retrievable.\"))));\n  }\n\n}\nexport default ListScreen;","map":{"version":3,"sources":["/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/components/list_screen/ListScreen.js"],"names":["React","Component","ListHeading","ListItemsTable","ListTrash","PropTypes","ListScreen","state","modalIsVisible","todoList","props","updateList","items","newList","console","log","setState","setListOwner","e","setOwner","target","value","setListName","setName","showModal","hideModal","deleteList","getListName","name","getName","getListOwner","owner","getOwner","getModal","render","goHome","updateListChanges","goItem","createNewItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ListHeading from './ListHeading'\nimport ListItemsTable from './ListItemsTable'\nimport ListTrash from './ListTrash'\nimport PropTypes from 'prop-types';\n\nexport class ListScreen extends Component {\n\n    state = {\n        modalIsVisible: false,\n        todoList: this.props.todoList\n    }\n\n    updateList = (items) => {\n        let newList = this.state.todoList;\n        console.log(newList);\n        newList.items = items;\n        this.setState({todoList: newList});\n    }\n    setListOwner = (e) => {\n        let newList = this.props.todoList;\n        newList.setOwner(e.target.value);\n        this.setState({todoList: newList});\n    }\n\n    setListName = (e) => {\n        let newList = this.props.todoList;\n        newList.setName(e.target.value);\n        this.setState({todoList: newList});\n    }\n\n    getListName() {\n        if (this.props.todoList) {\n            let name = this.props.todoList.getName();\n            return name;\n        }\n        else\n            return \"\";\n    }\n    getListOwner() {\n        if (this.props.todoList) {\n            let owner = this.props.todoList.getOwner();\n            return owner;\n        }\n    }\n    showModal = () => {\n        this.setState({modalIsVisible: true});\n    }\n    \n    hideModal = () => {\n        this.setState({modalIsVisible: false});\n    }\n\n    deleteList = () => {\n        this.hideModal();\n        this.props.deleteList();\n    }\n\n    getModal() {\n        return this.state.modalIsVisible ? \"modal is_visible\" : \"modal\";\n    }\n\n    render() {\n        return (\n            <div>\n                <div id=\"todo_list\">\n                    <ListHeading goHome={this.props.goHome}\n                                 todoList={this.state.todoList}\n                                 updateListChanges={this.props.updateListChanges} />\n                    <ListTrash showModal={this.showModal}/>\n                    <div id=\"list_details_container\">\n                        <div id=\"list_details_name_container\" className=\"text_toolbar\">\n                            <span id=\"list_name_prompt\" >Name:</span>\n                            <input \n                                onChange={this.setListName}\n                                defaultValue={this.getListName()} \n                                type=\"text\" \n                                id=\"list_name_textfield\" />\n                        </div>\n                        <div id=\"list_details_owner_container\" className=\"text_toolbar\" >\n                            <span id=\"list_owner_prompt\" >Owner:</span>\n                            <input \n                                onChange={this.setListOwner}\n                                defaultValue={this.getListOwner()}\n                                type=\"text\" \n                                id=\"list_owner_textfield\" />\n                        </div>\n                    </div>\n                    <ListItemsTable \n                        goItem={this.props.goItem}\n                        todoList={this.props.todoList}\n                        updateList={this.updateList}\n                        createNewItem={this.props.createNewItem} \n                    />\n                </div>\n                <div className={this.getModal()} data-animation={\"slideInOutLeft\"}>\n                    <div className=\"modal_dialog\">\n                        <p className=\"modal_header\">Delete list?</p>\n                        <br></br>\n                        <p className=\"modal_footer\">Are you sure you want to delete this list?</p>\n                        <div id=\"modal_dialog_button_container\"> \n                            <button className=\"modal_dialog_button\" onClick={this.deleteList}>YES</button>\n                            <button className=\"modal_dialog_button\" onClick={this.hideModal}>NO</button>\n                        </div>\n                        <p>This list will not be retrievable.</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListScreen\n"]},"metadata":{},"sourceType":"module"}