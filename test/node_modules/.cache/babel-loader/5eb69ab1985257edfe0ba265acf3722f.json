{"ast":null,"code":"import _defineProperty from \"/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json';\nimport HomeScreen from './components/home_screen/HomeScreen';\nimport ItemScreen from './components/item_screen/ItemScreen';\nimport ListScreen from './components/list_screen/ListScreen';\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentScreen: AppScreen.HOME_SCREEN,\n      todoLists: testTodoListData.todoLists,\n      currentList: null,\n      currentItem: null\n    };\n\n    this.goHome = () => {\n      this.updateListChanges(this.state.currentList);\n      this.setState({\n        currentScreen: AppScreen.HOME_SCREEN\n      });\n      this.setState({\n        currentList: null\n      });\n    };\n\n    this.goItem = item => {\n      this.setState({\n        currentScreen: AppScreen.ITEM_SCREEN\n      });\n      this.setState({\n        currentItem: item\n      });\n    };\n\n    this.updateItem = newItem => {\n      let newList = _objectSpread({}, this.state.currentList);\n\n      let newItems = newList.items;\n\n      if (newItem.key === newItems.length) {\n        newItems = [...newItems, newItem];\n      } else {\n        newItems = newItems.map(item => item.key === newItem.key ? newItem : item);\n      }\n\n      this.setState({\n        currentList\n      });\n    };\n\n    this.loadList = todoListToLoad => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      this.setState({\n        currentList: todoListToLoad\n      });\n    };\n\n    this.updateListChanges = list => {\n      let targetKey = list.key; // Delete old version of list from lists, if it exists\n\n      let newLists = [...this.state.todoLists].filter(list => list.key !== targetKey); // Add new version of list to top of lists\n\n      newLists = [list, ...newLists]; //Reorder keys\n\n      newLists = this.updateIndices(newLists); // Update state\n\n      this.setState({\n        todoLists: newLists\n      });\n    };\n\n    this.updateIndices = lists => {\n      for (var i = 0; i < lists.length; i++) {\n        lists[i].key = i;\n      }\n\n      return lists;\n    };\n\n    this.addToLists = list => {\n      this.setState({\n        todoLists: [list, ...this.state.todoLists]\n      });\n    };\n\n    this.removeFromLists = key => {\n      this.setState({\n        todoLists: [...this.state.todoLists.filter(list => list.key !== key)]\n      });\n    };\n  }\n\n  render() {\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return React.createElement(HomeScreen, {\n          loadList: this.loadList.bind(this),\n          todoLists: this.state.todoLists,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        });\n\n      case AppScreen.LIST_SCREEN:\n        return React.createElement(ListScreen, {\n          goHome: this.goHome.bind(this),\n          goItem: this.goItem.bind(this),\n          todoList: this.state.currentList,\n          updateListChanges: this.updateListChanges.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        });\n\n      case AppScreen.ITEM_SCREEN:\n        return React.createElement(ItemScreen, {\n          currentScreen: this.state.currentScreen,\n          todoItem: this.state.currentItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"ERROR\");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/App.js"],"names":["React","Component","testTodoListData","HomeScreen","ItemScreen","ListScreen","AppScreen","HOME_SCREEN","LIST_SCREEN","ITEM_SCREEN","App","state","currentScreen","todoLists","currentList","currentItem","goHome","updateListChanges","setState","goItem","item","updateItem","newItem","newList","newItems","items","key","length","map","loadList","todoListToLoad","list","targetKey","newLists","filter","updateIndices","lists","i","addToLists","removeFromLists","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json'\nimport HomeScreen from './components/home_screen/HomeScreen'\nimport ItemScreen from './components/item_screen/ItemScreen'\nimport ListScreen from './components/list_screen/ListScreen'\n\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n}\n\nclass App extends Component {\n  state = {\n    currentScreen: AppScreen.HOME_SCREEN,\n    todoLists: testTodoListData.todoLists,\n    currentList: null,\n    currentItem: null\n  }\n\n  goHome = () => {\n    this.updateListChanges(this.state.currentList);\n    this.setState({currentScreen: AppScreen.HOME_SCREEN});\n    this.setState({currentList: null});\n  }\n\n  goItem = (item) => {\n    this.setState({currentScreen: AppScreen.ITEM_SCREEN});\n    this.setState({currentItem: item});\n  }\n\n  updateItem = (newItem) => {\n    let newList = {...this.state.currentList};\n    let newItems = newList.items;\n    if (newItem.key === newItems.length) {\n      newItems = [...newItems, newItem];\n    }\n    else {\n      newItems = newItems.map(item => item.key === newItem.key ? newItem : item);\n    }\n    this.setState({currentList})\n  }\n\n  loadList = (todoListToLoad) => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    this.setState({currentList: todoListToLoad});\n  }\n\n  updateListChanges = (list) => {\n    let targetKey = list.key;\n\n    // Delete old version of list from lists, if it exists\n    let newLists = [...this.state.todoLists].filter(list => list.key !== targetKey);\n\n    // Add new version of list to top of lists\n    newLists = [list, ...newLists];\n\n    //Reorder keys\n    newLists = this.updateIndices(newLists);\n\n    // Update state\n    this.setState({todoLists: newLists});\n  }\n\n  updateIndices = (lists) => {\n    for(var i = 0; i < lists.length; i++) {\n        lists[i].key = i;\n    }\n    return lists;\n  }\n  \n  // Add to top of lists\n  addToLists = (list) => {\n    this.setState({todoLists: [list, ...this.state.todoLists]});\n  }\n  // Remove from lists\n  removeFromLists = (key) => {\n    this.setState({todoLists: [...this.state.todoLists.filter(list => list.key !== key)]});\n  }\n\n  render() {\n    switch(this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return <HomeScreen \n        loadList={this.loadList.bind(this)} \n        todoLists={this.state.todoLists} />;\n      case AppScreen.LIST_SCREEN:       \n        return <ListScreen\n          goHome={this.goHome.bind(this)}\n          goItem={this.goItem.bind(this)}\n          todoList={this.state.currentList} \n          updateListChanges={this.updateListChanges.bind(this)} />;\n      case AppScreen.ITEM_SCREEN:\n        return <ItemScreen \n          currentScreen={this.state.currentScreen}\n          todoItem={this.state.currentItem} />;\n      default:\n        return <div>ERROR</div>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}