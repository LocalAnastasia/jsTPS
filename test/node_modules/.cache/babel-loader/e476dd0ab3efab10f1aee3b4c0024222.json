{"ast":null,"code":"var _jsxFileName = \"/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/components/list_screen/ListScreen.js\";\nimport React, { Component } from 'react';\nimport ListHeading from './ListHeading';\nimport ListItemsTable from './ListItemsTable';\nimport ListTrash from './ListTrash';\nimport ListModal from './ListModal';\nimport PropTypes from 'prop-types';\nexport class ListScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalIsVisible: false\n    };\n\n    this.updateList = items => {\n      let newList = this.props.todoList;\n      newList.items = items;\n      this.props.updateListChanges(newList);\n    };\n\n    this.setListOwner = e => {\n      let newList = this.props.todoList;\n      newList.owner = e.target.value;\n      this.props.updateListChanges(newList);\n    };\n\n    this.setListName = e => {\n      let newList = this.props.todoList;\n      newList.name = e.target.value;\n      this.props.updateListChanges(newList);\n    };\n\n    this.showModal = () => {\n      this.setState({\n        modalIsVisible: true\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        modalIsVisible: false\n      });\n    };\n  }\n\n  getListName() {\n    if (this.props.todoList) {\n      let name = this.props.todoList.name;\n      return this.props.todoList.name;\n    } else return \"\";\n  }\n\n  getListOwner() {\n    if (this.props.todoList) {\n      let owner = this.props.todoList.owner;\n      return this.props.todoList.owner;\n    }\n  }\n\n  getModal() {\n    return this.state.modalIsVisible ? \"modal is_visible\" : \"modal\";\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"todo_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(ListHeading, {\n      goHome: this.props.goHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(ListTrash, {\n      showModal: this.props.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"list_details_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"list_details_name_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_name_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      onChange: this.setListName,\n      defaultValue: this.getListName(),\n      type: \"text\",\n      id: \"list_name_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"list_details_owner_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_owner_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Owner:\"), React.createElement(\"input\", {\n      onChange: this.setListOwner,\n      defaultValue: this.getListOwner(),\n      type: \"text\",\n      id: \"list_owner_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(ListItemsTable, {\n      goItem: this.props.goItem,\n      todoList: this.props.todoList,\n      updateList: this.updateList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"todo_modal\",\n      className: this.getModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"modal_yes_no_dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Delete list?\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Are you sure you want to delete this list?\"), React.createElement(\"div\", {\n      id: \"modal_yes_no_dialog_button_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"modal_yes_no_dialog_button_yes\",\n      onClick: this.props.deleteList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"YES\"), React.createElement(\"button\", {\n      id: \"modal_yes_no_dialog_button_no\",\n      onClick: this.props.hideModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"NO\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"This list will not be retrievable.\"))));\n  }\n\n}\nexport default ListScreen;","map":{"version":3,"sources":["/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/components/list_screen/ListScreen.js"],"names":["React","Component","ListHeading","ListItemsTable","ListTrash","ListModal","PropTypes","ListScreen","state","modalIsVisible","updateList","items","newList","props","todoList","updateListChanges","setListOwner","e","owner","target","value","setListName","name","showModal","setState","hideModal","getListName","getListOwner","getModal","render","goHome","goItem","deleteList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ListHeading from './ListHeading'\nimport ListItemsTable from './ListItemsTable'\nimport ListTrash from './ListTrash'\nimport ListModal from './ListModal'\nimport PropTypes from 'prop-types';\n\nexport class ListScreen extends Component {\n    state = {\n        modalIsVisible: false\n    }\n\n    updateList = (items) => {\n        let newList = this.props.todoList;\n        newList.items = items;\n        this.props.updateListChanges(newList);\n    }\n    setListOwner = (e) => {\n        let newList = this.props.todoList;\n        newList.owner = e.target.value;\n        this.props.updateListChanges(newList);\n    }\n\n    setListName = (e) => {\n        let newList = this.props.todoList;\n        newList.name = e.target.value;\n        this.props.updateListChanges(newList);\n    }\n\n    getListName() {\n        if (this.props.todoList) {\n            let name = this.props.todoList.name;\n            return this.props.todoList.name;\n        }\n        else\n            return \"\";\n    }\n    getListOwner() {\n        if (this.props.todoList) {\n            let owner = this.props.todoList.owner;\n            return this.props.todoList.owner;\n        }\n    }\n    showModal = () => {\n        this.setState({modalIsVisible: true});\n      }\n    \n    hideModal = () => {\n        this.setState({modalIsVisible: false});\n    }\n    getModal() {\n        return this.state.modalIsVisible ? \"modal is_visible\" : \"modal\";\n    }\n    render() {\n        return (\n            <div>\n                <div id=\"todo_list\">\n                    <ListHeading goHome={this.props.goHome}/>\n                    <ListTrash showModal={this.props.showModal}/>\n                    <div id=\"list_details_container\">\n                        <div id=\"list_details_name_container\" className=\"text_toolbar\">\n                            <span id=\"list_name_prompt\" >Name:</span>\n                            <input \n                                onChange={this.setListName}\n                                defaultValue={this.getListName()} \n                                type=\"text\" \n                                id=\"list_name_textfield\" />\n                        </div>\n                        <div id=\"list_details_owner_container\" className=\"text_toolbar\" >\n                            <span id=\"list_owner_prompt\" >Owner:</span>\n                            <input \n                                onChange={this.setListOwner}\n                                defaultValue={this.getListOwner()}\n                                type=\"text\" \n                                id=\"list_owner_textfield\" />\n                        </div>\n                    </div>\n                    <ListItemsTable \n                        goItem={this.props.goItem}\n                        todoList={this.props.todoList}\n                        updateList={this.updateList} \n                    />\n                </div>\n                <div id=\"todo_modal\" className={this.getModal()}>\n                    <div id=\"modal_yes_no_dialog\">\n                        <p>Delete list?</p>\n                        <br></br>\n                        <p>Are you sure you want to delete this list?</p>\n                        <div id=\"modal_yes_no_dialog_button_container\">\n                            <button id=\"modal_yes_no_dialog_button_yes\" onClick={this.props.deleteList}>YES</button>\n                            <button id=\"modal_yes_no_dialog_button_no\" onClick={this.props.hideModal}>NO</button>\n                        </div>\n                        <p>This list will not be retrievable.</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListScreen\n"]},"metadata":{},"sourceType":"module"}