{"ast":null,"code":"var _jsxFileName = \"/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/components/list_screen/ListScreen.js\";\nimport React, { Component } from 'react';\nimport ListHeading from './ListHeading';\nimport ListItemsTable from './ListItemsTable';\nimport ListTrash from './ListTrash';\nimport PropTypes from 'prop-types';\nexport class ListScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalIsVisible: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        modalIsVisible: true\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        modalIsVisible: false\n      });\n    };\n\n    this.updateList = items => {\n      let newList = this.props.todoList;\n      newList.items = items;\n      this.props.updateListChanges(newList);\n    };\n\n    this.setListOwner = e => {\n      let newList = this.props.todoList;\n      newList.owner = e.target.value;\n      this.props.updateListChanges(newList);\n    };\n\n    this.setListName = e => {\n      let newList = this.props.todoList;\n      newList.name = e.target.value;\n      this.props.updateListChanges(newList);\n    };\n  }\n\n  getListName() {\n    if (this.props.todoList) {\n      let name = this.props.todoList.name;\n      return this.props.todoList.name;\n    } else return \"\";\n  }\n\n  getListOwner() {\n    if (this.props.todoList) {\n      let owner = this.props.todoList.owner;\n      return this.props.todoList.owner;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"todo_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(ListHeading, {\n      goHome: this.props.goHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(ListTrash, {\n      showModal: this.props.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"list_details_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"list_details_name_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_name_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      onChange: this.setListName,\n      defaultValue: this.getListName(),\n      type: \"text\",\n      id: \"list_name_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"list_details_owner_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_owner_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Owner:\"), React.createElement(\"input\", {\n      onChange: this.setListOwner,\n      defaultValue: this.getListOwner(),\n      type: \"text\",\n      id: \"list_owner_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))), React.createElement(ListItemsTable, {\n      goItem: this.props.goItem,\n      todoList: this.props.todoList,\n      updateList: this.updateList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default ListScreen;","map":{"version":3,"sources":["/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/components/list_screen/ListScreen.js"],"names":["React","Component","ListHeading","ListItemsTable","ListTrash","PropTypes","ListScreen","state","modalIsVisible","showModal","setState","hideModal","updateList","items","newList","props","todoList","updateListChanges","setListOwner","e","owner","target","value","setListName","name","getListName","getListOwner","render","goHome","goItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ListHeading from './ListHeading'\nimport ListItemsTable from './ListItemsTable'\nimport ListTrash from './ListTrash'\nimport PropTypes from 'prop-types';\n\nexport class ListScreen extends Component {\n    state = {\n        modalIsVisible: false\n    }\n\n    showModal = () => {\n        this.setState({modalIsVisible: true});\n    }\n\n    hideModal = () => {\n        this.setState({modalIsVisible: false});\n    }\n\n    updateList = (items) => {\n        let newList = this.props.todoList;\n        newList.items = items;\n        this.props.updateListChanges(newList);\n    }\n    setListOwner = (e) => {\n        let newList = this.props.todoList;\n        newList.owner = e.target.value;\n        this.props.updateListChanges(newList);\n    }\n\n    setListName = (e) => {\n        let newList = this.props.todoList;\n        newList.name = e.target.value;\n        this.props.updateListChanges(newList);\n    }\n\n    getListName() {\n        if (this.props.todoList) {\n            let name = this.props.todoList.name;\n            return this.props.todoList.name;\n        }\n        else\n            return \"\";\n    }\n    getListOwner() {\n        if (this.props.todoList) {\n            let owner = this.props.todoList.owner;\n            return this.props.todoList.owner;\n        }\n    }\n    render() {\n        return (\n            \n            <div id=\"todo_list\">\n                <ListHeading goHome={this.props.goHome}/>\n                <ListTrash showModal={this.props.showModal}/>\n                <div id=\"list_details_container\">\n                    <div id=\"list_details_name_container\" className=\"text_toolbar\">\n                        <span id=\"list_name_prompt\" >Name:</span>\n                        <input \n                            onChange={this.setListName}\n                            defaultValue={this.getListName()} \n                            type=\"text\" \n                            id=\"list_name_textfield\" />\n                    </div>\n                    <div id=\"list_details_owner_container\" className=\"text_toolbar\" >\n                        <span id=\"list_owner_prompt\" >Owner:</span>\n                        <input \n                            onChange={this.setListOwner}\n                            defaultValue={this.getListOwner()}\n                            type=\"text\" \n                            id=\"list_owner_textfield\" />\n                    </div>\n                </div>\n                <ListItemsTable \n                    goItem={this.props.goItem}\n                    todoList={this.props.todoList}\n                    updateList={this.updateList} \n                />\n            </div>\n        )\n    }\n}\n\nexport default ListScreen\n"]},"metadata":{},"sourceType":"module"}