{"ast":null,"code":"var _jsxFileName = \"/Users/vincentchooi/Documents/University/CSE316/jsTPS/test/src/components/TesterScreen.js\";\nimport React, { Component } from 'react';\nimport jsTPS from '../jsTPS/jsTPS';\nimport Num from '../demo/Num';\nimport AddToNum_Transaction from '../demo/AddToNum_Transaction';\nimport AndMask_Transaction from '../demo/AndMask_Transaction';\nimport OrMask_Transaction from '../demo/OrMask_Transaction';\n\nclass TesterScreen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      num: new Num(),\n      addValue: 0,\n      andValue: 0,\n      orValue: 0\n    };\n\n    this.printStates = () => {\n      const testScript = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"'CURRENT jsTPS: \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.tps.toString()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"CURRENT Num: \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.state.num.getNum()));\n      return testScript;\n    };\n\n    this.setAddValue = e => {\n      let val = parseInt(e.target.value);\n      this.setState({\n        addValue: val\n      });\n    };\n\n    this.setAndValue = e => {\n      let val = parseInt(e.target.value);\n      this.setState({\n        andValue: val\n      });\n    };\n\n    this.setOrValue = e => {\n      let val = parseInt(e.target.value);\n      this.setState({\n        orValue: val\n      });\n    };\n\n    this.addToNum = () => {\n      let newNum = this.createNewNum(JSON.parse(JSON.stringify(this.state.num)));\n      this.tps.addTransaction(new AddToNum_Transaction(newNum, this.state.addValue));\n      this.setState({\n        num: newNum,\n        addValue: 0\n      });\n    };\n\n    this.andMaskNum = () => {\n      let newNum = this.createNewNum(JSON.parse(JSON.stringify(this.state.num)));\n      this.tps.addTransaction(new AndMask_Transaction(newNum, newNum.getNum(), this.state.andValue));\n      this.setState({\n        num: newNum,\n        andValue: 0\n      });\n    };\n\n    this.orMaskNum = () => {\n      let newNum = this.createNewNum(JSON.parse(JSON.stringify(this.state.num)));\n      this.tps.addTransaction(new OrMask_Transaction(newNum, newNum.getNum(), this.state.orValue));\n      this.setState({\n        num: newNum,\n        orValue: 0\n      });\n    };\n\n    this.undoTransaction = () => {\n      let transaction = this.tps.peekUndo();\n\n      if (transaction) {\n        this.tps.undoTransaction();\n        console.log(transaction.num);\n        var newNum = this.createNewNum(JSON.parse(JSON.stringify(transaction.num)));\n        this.setState({\n          num: newNum\n        });\n      }\n    };\n\n    this.redoTransaction = () => {\n      let transaction = this.tps.peekDo();\n\n      if (transaction) {\n        this.tps.doTransaction();\n        var newNum = this.createNewNum(JSON.parse(JSON.stringify(transaction.num)));\n        this.setState({\n          num: newNum\n        });\n      }\n    };\n\n    this.clearAllTransactions = () => {\n      this.tps.clearAllTransactions();\n      this.forceUpdate();\n    };\n\n    this.reset = () => {\n      this.tps = new jsTPS();\n      this.setState({\n        num: new Num()\n      });\n    };\n\n    this.tps = new jsTPS(); //this.newNum = new Num();\n  }\n\n  createNewNum(num) {\n    var newNum = new Num(num.num);\n    return newNum;\n  }\n\n  render() {\n    console.log(this.state.num.getNum());\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.printStates()), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Pick a transaction:\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Value: \"), React.createElement(\"input\", {\n      value: this.state.addValue,\n      type: \"text\",\n      onChange: this.setAddValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.addToNum,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Add To Num\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Value: \"), React.createElement(\"input\", {\n      value: this.state.andValue,\n      type: \"number\",\n      onChange: this.setAndValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.andMaskNum,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"And Mask Num\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Value: \"), React.createElement(\"input\", {\n      value: this.state.orValue,\n      type: \"number\",\n      onChange: this.setOrValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.orMaskNum,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Or Mask Num\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.undoTransaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Undo Most Recent Transaction\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.redoTransaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Redo Most Recent Transaction\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.clearAllTransactions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Clear All Transactions\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.reset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Reset jsTPS and Num\"))), React.createElement(\"button\", {\n      onClick: this.props.goTestHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Back\"));\n  }\n\n}\n\nexport default TesterScreen;","map":{"version":3,"sources":["/Users/vincentchooi/Documents/University/CSE316/jsTPS/test/src/components/TesterScreen.js"],"names":["React","Component","jsTPS","Num","AddToNum_Transaction","AndMask_Transaction","OrMask_Transaction","TesterScreen","constructor","state","num","addValue","andValue","orValue","printStates","testScript","tps","toString","getNum","setAddValue","e","val","parseInt","target","value","setState","setAndValue","setOrValue","addToNum","newNum","createNewNum","JSON","parse","stringify","addTransaction","andMaskNum","orMaskNum","undoTransaction","transaction","peekUndo","console","log","redoTransaction","peekDo","doTransaction","clearAllTransactions","forceUpdate","reset","render","props","goTestHome"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,oBAAP,MAAiC,8BAAjC;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAoC;AAEhCO,EAAAA,WAAW,GAAG;AACV;AADU,SAMdC,KANc,GAMN;AACJC,MAAAA,GAAG,EAAE,IAAIP,GAAJ,EADD;AAEJQ,MAAAA,QAAQ,EAAE,CAFN;AAGJC,MAAAA,QAAQ,EAAE,CAHN;AAIJC,MAAAA,OAAO,EAAE;AAJL,KANM;;AAAA,SAYdC,WAZc,GAYA,MAAM;AAChB,YAAMC,UAAU,GACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKC,GAAL,CAASC,QAAT,EAAJ,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKR,KAAL,CAAWC,GAAX,CAAeQ,MAAf,EAAJ,CALJ,CADJ;AASA,aAAOH,UAAP;AACH,KAvBa;;AAAA,SA8BdI,WA9Bc,GA8BCC,CAAD,IAAO;AACjB,UAAIC,GAAG,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAlB;AACA,WAAKC,QAAL,CAAc;AAACd,QAAAA,QAAQ,EAAEU;AAAX,OAAd;AACH,KAjCa;;AAAA,SAmCdK,WAnCc,GAmCCN,CAAD,IAAO;AACjB,UAAIC,GAAG,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAlB;AACA,WAAKC,QAAL,CAAc;AAACb,QAAAA,QAAQ,EAAES;AAAX,OAAd;AACH,KAtCa;;AAAA,SAwCdM,UAxCc,GAwCAP,CAAD,IAAO;AAChB,UAAIC,GAAG,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAlB;AACA,WAAKC,QAAL,CAAc;AAACZ,QAAAA,OAAO,EAAEQ;AAAV,OAAd;AACH,KA3Ca;;AAAA,SA6CdO,QA7Cc,GA6CH,MAAM;AACb,UAAIC,MAAM,GAAG,KAAKC,YAAL,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAKxB,KAAL,CAAWC,GAA1B,CAAX,CAAlB,CAAb;AACA,WAAKM,GAAL,CAASkB,cAAT,CAAwB,IAAI9B,oBAAJ,CAAyByB,MAAzB,EAAiC,KAAKpB,KAAL,CAAWE,QAA5C,CAAxB;AACA,WAAKc,QAAL,CAAc;AAACf,QAAAA,GAAG,EAAEmB,MAAN;AAAclB,QAAAA,QAAQ,EAAE;AAAxB,OAAd;AACH,KAjDa;;AAAA,SAmDdwB,UAnDc,GAmDD,MAAM;AACf,UAAIN,MAAM,GAAG,KAAKC,YAAL,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAKxB,KAAL,CAAWC,GAA1B,CAAX,CAAlB,CAAb;AACA,WAAKM,GAAL,CAASkB,cAAT,CAAwB,IAAI7B,mBAAJ,CAAwBwB,MAAxB,EAAgCA,MAAM,CAACX,MAAP,EAAhC,EAAiD,KAAKT,KAAL,CAAWG,QAA5D,CAAxB;AACA,WAAKa,QAAL,CAAc;AAACf,QAAAA,GAAG,EAAEmB,MAAN;AAAcjB,QAAAA,QAAQ,EAAE;AAAxB,OAAd;AACH,KAvDa;;AAAA,SAyDdwB,SAzDc,GAyDF,MAAM;AACd,UAAIP,MAAM,GAAG,KAAKC,YAAL,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAKxB,KAAL,CAAWC,GAA1B,CAAX,CAAlB,CAAb;AACA,WAAKM,GAAL,CAASkB,cAAT,CAAwB,IAAI5B,kBAAJ,CAAuBuB,MAAvB,EAA+BA,MAAM,CAACX,MAAP,EAA/B,EAAgD,KAAKT,KAAL,CAAWI,OAA3D,CAAxB;AACA,WAAKY,QAAL,CAAc;AAACf,QAAAA,GAAG,EAAEmB,MAAN;AAAchB,QAAAA,OAAO,EAAE;AAAvB,OAAd;AACH,KA7Da;;AAAA,SA+DdwB,eA/Dc,GA+DI,MAAM;AACpB,UAAIC,WAAW,GAAG,KAAKtB,GAAL,CAASuB,QAAT,EAAlB;;AACA,UAAID,WAAJ,EAAiB;AACb,aAAKtB,GAAL,CAASqB,eAAT;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYH,WAAW,CAAC5B,GAAxB;AACA,YAAImB,MAAM,GAAG,KAAKC,YAAL,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeK,WAAW,CAAC5B,GAA3B,CAAX,CAAlB,CAAb;AACA,aAAKe,QAAL,CAAc;AAACf,UAAAA,GAAG,EAAEmB;AAAN,SAAd;AACH;AACJ,KAvEa;;AAAA,SAyEda,eAzEc,GAyEI,MAAM;AACpB,UAAIJ,WAAW,GAAG,KAAKtB,GAAL,CAAS2B,MAAT,EAAlB;;AACA,UAAIL,WAAJ,EAAiB;AACb,aAAKtB,GAAL,CAAS4B,aAAT;AACA,YAAIf,MAAM,GAAG,KAAKC,YAAL,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeK,WAAW,CAAC5B,GAA3B,CAAX,CAAlB,CAAb;AACA,aAAKe,QAAL,CAAc;AAACf,UAAAA,GAAG,EAAEmB;AAAN,SAAd;AACH;AACJ,KAhFa;;AAAA,SAkFdgB,oBAlFc,GAkFS,MAAM;AACzB,WAAK7B,GAAL,CAAS6B,oBAAT;AACA,WAAKC,WAAL;AACH,KArFa;;AAAA,SAuFdC,KAvFc,GAuFN,MAAM;AACV,WAAK/B,GAAL,GAAW,IAAId,KAAJ,EAAX;AACA,WAAKuB,QAAL,CAAc;AAACf,QAAAA,GAAG,EAAE,IAAIP,GAAJ;AAAN,OAAd;AACH,KA1Fa;;AAEV,SAAKa,GAAL,GAAW,IAAId,KAAJ,EAAX,CAFU,CAGV;AACH;;AAqBD4B,EAAAA,YAAY,CAACpB,GAAD,EAAM;AACd,QAAImB,MAAM,GAAG,IAAI1B,GAAJ,CAAQO,GAAG,CAACA,GAAZ,CAAb;AACA,WAAOmB,MAAP;AACH;;AAkEDmB,EAAAA,MAAM,GAAG;AACLR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhC,KAAL,CAAWC,GAAX,CAAeQ,MAAf,EAAZ;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKJ,WAAL,EAAN,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAO,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,QAAzB;AAAmC,MAAA,IAAI,EAAC,MAAxC;AAA+C,MAAA,QAAQ,EAAE,KAAKQ,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKS,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAO,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWG,QAAzB;AAAmC,MAAA,IAAI,EAAC,QAAxC;AAAiD,MAAA,QAAQ,EAAE,KAAKc,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKS,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,CANJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAO,MAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWI,OAAzB;AAAkC,MAAA,IAAI,EAAC,QAAvC;AAAgD,MAAA,QAAQ,EAAE,KAAKc,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKS,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CAXJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,CAhBJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKK,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,CAnBJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKG,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CAtBJ,EAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CAzBJ,CAHJ,EAgCI;AAAQ,MAAA,OAAO,EAAE,KAAKE,KAAL,CAAWC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCJ,CADJ;AAoCH;;AAtI+B;;AAyIpC,eAAe3C,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport jsTPS from '../jsTPS/jsTPS'\nimport Num from '../demo/Num'\nimport AddToNum_Transaction from '../demo/AddToNum_Transaction'\nimport AndMask_Transaction from '../demo/AndMask_Transaction'\nimport OrMask_Transaction from '../demo/OrMask_Transaction'\n\nclass TesterScreen extends Component{\n\n    constructor() {\n        super();\n        this.tps = new jsTPS();\n        //this.newNum = new Num();\n    }\n\n    state = {\n        num: new Num(),\n        addValue: 0,\n        andValue: 0,\n        orValue: 0\n    }\n    printStates = () => {\n        const testScript = \n            <div>\n                <p>'CURRENT jsTPS: </p>\n                <p>{this.tps.toString()}</p>\n                <br></br>\n                <p>CURRENT Num: </p>\n                <p>{this.state.num.getNum()}</p>\n            </div>\n        \n        return testScript;\n    }\n\n    createNewNum(num) {\n        var newNum = new Num(num.num);\n        return newNum;\n    }\n\n    setAddValue = (e) => {\n        let val = parseInt(e.target.value);\n        this.setState({addValue: val});\n    }\n\n    setAndValue = (e) => {\n        let val = parseInt(e.target.value);\n        this.setState({andValue: val});  \n    }\n\n    setOrValue = (e) => {\n        let val = parseInt(e.target.value);\n        this.setState({orValue: val});\n    }\n\n    addToNum = () => {\n        let newNum = this.createNewNum(JSON.parse(JSON.stringify(this.state.num)));\n        this.tps.addTransaction(new AddToNum_Transaction(newNum, this.state.addValue));\n        this.setState({num: newNum, addValue: 0});\n    }\n\n    andMaskNum = () => {\n        let newNum = this.createNewNum(JSON.parse(JSON.stringify(this.state.num)));\n        this.tps.addTransaction(new AndMask_Transaction(newNum, newNum.getNum(), this.state.andValue));\n        this.setState({num: newNum, andValue: 0});    \n    }\n\n    orMaskNum = () => {\n        let newNum = this.createNewNum(JSON.parse(JSON.stringify(this.state.num)));\n        this.tps.addTransaction(new OrMask_Transaction(newNum, newNum.getNum(), this.state.orValue));\n        this.setState({num: newNum, orValue: 0});     \n    }\n    \n    undoTransaction = () => {\n        let transaction = this.tps.peekUndo();\n        if (transaction) {\n            this.tps.undoTransaction();\n            console.log(transaction.num);\n            var newNum = this.createNewNum(JSON.parse(JSON.stringify(transaction.num)));\n            this.setState({num: newNum});\n        }\n    }\n\n    redoTransaction = () => {\n        let transaction = this.tps.peekDo();\n        if (transaction) {\n            this.tps.doTransaction();\n            var newNum = this.createNewNum(JSON.parse(JSON.stringify(transaction.num)));\n            this.setState({num: newNum});\n        }\n    }\n\n    clearAllTransactions = () => {\n        this.tps.clearAllTransactions();\n        this.forceUpdate();\n    }\n\n    reset = () => {\n        this.tps = new jsTPS();\n        this.setState({num: new Num()});\n    }\n\n\n\n    render() {\n        console.log(this.state.num.getNum());\n        return(\n            <div>\n                <div>{this.printStates()}</div>\n                <p>Pick a transaction:</p>\n                <div>\n                    <div>\n                        <span>Value: </span>\n                        <input value={this.state.addValue} type='text' onChange={this.setAddValue}/>\n                        <button onClick={this.addToNum}>Add To Num</button>\n                    </div>\n                    <div>\n                        <span>Value: </span>\n                        <input value={this.state.andValue} type='number' onChange={this.setAndValue}/>\n                        <button onClick={this.andMaskNum}>And Mask Num</button>\n                    </div>\n                    <div>\n                        <span>Value: </span>\n                        <input value={this.state.orValue} type='number' onChange={this.setOrValue}/>\n                        <button onClick={this.orMaskNum}>Or Mask Num</button>\n                    </div>\n                    <div>\n                        <button onClick={this.undoTransaction}>Undo Most Recent Transaction</button>\n                    </div>\n                    <div>\n                        <button onClick={this.redoTransaction}>Redo Most Recent Transaction</button>\n                    </div>\n                    <div>\n                        <button onClick={this.clearAllTransactions}>Clear All Transactions</button>\n                    </div>\n                    <div>\n                        <button onClick={this.reset}>Reset jsTPS and Num</button>\n                    </div>\n                </div>\n                <button onClick={this.props.goTestHome}>Back</button>\n            </div>\n        )\n    }\n}\n\nexport default TesterScreen;"]},"metadata":{},"sourceType":"module"}