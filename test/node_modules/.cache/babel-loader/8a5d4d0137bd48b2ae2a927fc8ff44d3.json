{"ast":null,"code":"var _jsxFileName = \"/Users/vincentchooi/Documents/University/CSE316/jsTPS/test/src/components/TesterScreen.js\";\nimport React, { Component } from 'react';\nimport jsTPS from '../jsTPS/jsTPS';\nimport Num from '../demo/Num';\nimport AddToNum_Transaction from '../demo/AddToNum_Transaction';\nimport AndMask_Transaction from '../demo/AndMask_Transaction';\nimport OrMask_Transaction from '../demo/OrMask_Transaction';\n\nclass TesterScreen extends Component {\n  constructor() {\n    super();\n\n    this.setAddValue = e => {\n      let val = parseInt(e.target.value);\n      this.setState({\n        addValue: val\n      });\n    };\n\n    this.setAndValue = e => {\n      let val = parseInt(e.target.value);\n      this.setState({\n        andValue: val\n      });\n    };\n\n    this.setOrValue = e => {\n      let val = parseInt(e.target.value);\n      this.setState({\n        orValue: val\n      });\n    };\n\n    this.tps = new jsTPS();\n    this.state = {\n      num: new Num(),\n      addValue: 0,\n      andValue: 0,\n      orValue: 0\n    };\n  }\n\n  printStates() {\n    const testScript = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"'CURRENT jsTPS: \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.tps.toString()), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"CURRENT Num: \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.state.num.getNum()));\n    return testScript;\n  }\n\n  createNewNum(num) {\n    console.log(num.num);\n    var newNum = new Num(num.num);\n    return newNum;\n  }\n\n  addToNum() {\n    var newNum = this.createNewNum(JSON.parse(JSON.stringify(this.state.num)));\n    this.tps.addTransaction(new AddToNum_Transaction(newNum, this.state.addValue));\n    this.setState({\n      num: newNum\n    });\n  }\n\n  andMaskNum() {\n    var newNum = this.createNewNum(JSON.parse(JSON.stringify(this.state.num)));\n    this.tps.addTransaction(new AndMask_Transaction(newNum, this.state.andValue));\n    this.setState({\n      num: newNum\n    });\n  }\n\n  orMaskNum() {\n    var newNum = this.createNewNum(JSON.parse(JSON.stringify(this.state.num)));\n    this.tps.addTransaction(new OrMask_Transaction(newNum, this.state.orValue));\n    this.setState({\n      num: newNum\n    });\n  }\n\n  undoTransaction() {\n    let transaction = this.tps.peekUndo();\n\n    if (transaction) {\n      this.tps.undoTransaction();\n      this.setState({\n        num: transaction.initNum\n      });\n    }\n  }\n\n  redoTransaction() {\n    let transaction = this.tps.peekDo();\n\n    if (transaction) {\n      this.tps.doTransaction();\n      this.setState({\n        num: transaction.initNum\n      });\n    }\n  }\n\n  clearAllTransactions() {\n    this.tps.clearAllTransactions();\n    this.forceUpdate();\n  }\n\n  reset() {\n    this.tps = new jsTPS();\n    this.setState({\n      num: new Num()\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.printStates()), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Pick a transaction:\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Value: \"), React.createElement(\"input\", {\n      value: this.state.addValue,\n      type: \"text\",\n      onChange: this.setAddValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.addToNum,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Add To Num\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Value: \"), React.createElement(\"input\", {\n      value: this.state.andValue,\n      type: \"number\",\n      onChange: this.setAndValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.andMaskNum,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"And Mask Num\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Value: \"), React.createElement(\"input\", {\n      value: this.state.orValue,\n      type: \"number\",\n      onChange: this.setOrValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.orMaskNum,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Or Mask Num\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Undo Most Recent Transaction\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Redo Most Recent Transaction\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Clear All Transactions\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Reset jsTPS and Num\"))), React.createElement(\"button\", {\n      onClick: this.props.goTestHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Back\"));\n  }\n\n}\n\nexport default TesterScreen;","map":{"version":3,"sources":["/Users/vincentchooi/Documents/University/CSE316/jsTPS/test/src/components/TesterScreen.js"],"names":["React","Component","jsTPS","Num","AddToNum_Transaction","AndMask_Transaction","OrMask_Transaction","TesterScreen","constructor","setAddValue","e","val","parseInt","target","value","setState","addValue","setAndValue","andValue","setOrValue","orValue","tps","state","num","printStates","testScript","toString","getNum","createNewNum","console","log","newNum","addToNum","JSON","parse","stringify","addTransaction","andMaskNum","orMaskNum","undoTransaction","transaction","peekUndo","initNum","redoTransaction","peekDo","doTransaction","clearAllTransactions","forceUpdate","reset","render","props","goTestHome"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport jsTPS from '../jsTPS/jsTPS'\nimport Num from '../demo/Num'\nimport AddToNum_Transaction from '../demo/AddToNum_Transaction'\nimport AndMask_Transaction from '../demo/AndMask_Transaction'\nimport OrMask_Transaction from '../demo/OrMask_Transaction'\n\nclass TesterScreen extends Component{\n\n    constructor() {\n        super();\n        this.tps = new jsTPS();\n        this.state = {\n            num: new Num(),\n            addValue: 0,\n            andValue: 0,\n            orValue: 0\n        }\n    }\n\n    printStates() {\n        const testScript = \n            <div>\n                <p>'CURRENT jsTPS: </p>\n                <p>{this.tps.toString()}</p>\n                <br></br>\n                <p>CURRENT Num: </p>\n                <p>{this.state.num.getNum()}</p>\n            </div>\n        \n        return testScript;\n    }\n\n    createNewNum(num) {\n        console.log(num.num)\n        var newNum = new Num(num.num);\n        return newNum;\n    }\n\n    setAddValue = (e) => {\n        let val = parseInt(e.target.value);\n        this.setState({addValue: val});\n    }\n\n    setAndValue = (e) => {\n        let val = parseInt(e.target.value);\n        this.setState({andValue: val});  \n    }\n\n    setOrValue = (e) => {\n        let val = parseInt(e.target.value);\n        this.setState({orValue: val});\n    }\n\n    addToNum() {\n        var newNum = this.createNewNum(JSON.parse(JSON.stringify(this.state.num)));\n        this.tps.addTransaction(new AddToNum_Transaction(newNum, this.state.addValue));\n        this.setState({num: newNum});\n    }\n\n    andMaskNum() {\n        var newNum = this.createNewNum(JSON.parse(JSON.stringify(this.state.num)));\n        this.tps.addTransaction(new AndMask_Transaction(newNum, this.state.andValue));\n        this.setState({num: newNum});    \n    }\n\n    orMaskNum() {\n        var newNum = this.createNewNum(JSON.parse(JSON.stringify(this.state.num)));\n        this.tps.addTransaction(new OrMask_Transaction(newNum, this.state.orValue));\n        this.setState({num: newNum});     \n    }\n    \n    undoTransaction() {\n        let transaction = this.tps.peekUndo();\n        if (transaction) {\n            this.tps.undoTransaction();\n            this.setState({num: transaction.initNum});\n        }\n    }\n\n    redoTransaction() {\n        let transaction = this.tps.peekDo();\n        if (transaction) {\n            this.tps.doTransaction();\n            this.setState({num: transaction.initNum});\n        }\n    }\n\n    clearAllTransactions() {\n        this.tps.clearAllTransactions();\n        this.forceUpdate();\n    }\n\n    reset() {\n        this.tps = new jsTPS();\n        this.setState({num: new Num()});\n    }\n\n\n\n    render() {\n        return(\n            <div>\n                <div>{this.printStates()}</div>\n                <p>Pick a transaction:</p>\n                <div>\n                    <div>\n                        <span>Value: </span>\n                        <input value={this.state.addValue} type='text' onChange={this.setAddValue}/>\n                        <button onClick={this.addToNum}>Add To Num</button>\n                    </div>\n                    <div>\n                        <span>Value: </span>\n                        <input value={this.state.andValue} type='number' onChange={this.setAndValue}/>\n                        <button onClick={this.andMaskNum}>And Mask Num</button>\n                    </div>\n                    <div>\n                        <span>Value: </span>\n                        <input value={this.state.orValue} type='number' onChange={this.setOrValue}/>\n                        <button onClick={this.orMaskNum}>Or Mask Num</button>\n                    </div>\n                    <div>\n                        <button>Undo Most Recent Transaction</button>\n                    </div>\n                    <div>\n                        <button>Redo Most Recent Transaction</button>\n                    </div>\n                    <div>\n                        <button>Clear All Transactions</button>\n                    </div>\n                    <div>\n                        <button>Reset jsTPS and Num</button>\n                    </div>\n                </div>\n                <button onClick={this.props.goTestHome}>Back</button>\n            </div>\n        )\n    }\n}\n\nexport default TesterScreen;"]},"metadata":{},"sourceType":"module"}