{"ast":null,"code":"var _jsxFileName = \"/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/App.js\";\nimport React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json';\nimport HomeScreen from './components/home_screen/HomeScreen';\nimport ItemScreen from './components/item_screen/ItemScreen';\nimport ListScreen from './components/list_screen/ListScreen';\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentScreen: AppScreen.HOME_SCREEN,\n      todoLists: testTodoListData.todoLists,\n      currentList: null\n    };\n\n    this.goHome = () => {\n      this.updateListChanges(this.state.list);\n      this.setState({\n        currentScreen: AppScreen.HOME_SCREEN\n      });\n      this.setState({\n        currentList: null\n      });\n    };\n\n    this.loadList = todoListToLoad => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      this.setState({\n        currentList: todoListToLoad\n      });\n      console.log(\"currentList: \" + this.state.currentList);\n      console.log(\"currentScreen: \" + this.state.currentScreen);\n    };\n\n    this.updateListChanges = list => {\n      let targetKey = list.key; // Delete old version of list from lists\n\n      let newLists = [...this.state.todoLists].filter(list => list.key !== targetKey);\n      console.log(newLists); // Add new version of list to top of lists\n\n      newLists = [list, ...newLists];\n      console.log(newLists); //Reorder keys\n\n      newLists = this.updateIndices(newLists); // Update state\n\n      this.setState({\n        todoLists: newLists\n      });\n    };\n\n    this.updateIndices = lists => {\n      console.log(lists);\n\n      for (var i = 0; i < lists.length; i++) {\n        lists[i].key = i;\n      }\n\n      return lists;\n    };\n\n    this.addToLists = list => {\n      this.setState({\n        todoLists: [list, ...this.state.todoLists]\n      });\n    };\n\n    this.removeFromLists = key => {\n      this.setState({\n        todoLists: [...this.state.todoLists.filter(list => list.key !== key)]\n      });\n    };\n  }\n\n  render() {\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return React.createElement(HomeScreen, {\n          loadList: this.loadList.bind(this),\n          todoLists: this.state.todoLists,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n\n      case AppScreen.LIST_SCREEN:\n        return React.createElement(ListScreen, {\n          goHome: this.goHome.bind(this),\n          todoList: this.state.currentList,\n          updateListChanges: this.updateListChanges.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        });\n\n      case AppScreen.ITEM_SCREEN:\n        return React.createElement(ItemScreen, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"ERROR\");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/App.js"],"names":["React","Component","testTodoListData","HomeScreen","ItemScreen","ListScreen","AppScreen","HOME_SCREEN","LIST_SCREEN","ITEM_SCREEN","App","state","currentScreen","todoLists","currentList","goHome","updateListChanges","list","setState","loadList","todoListToLoad","console","log","targetKey","key","newLists","filter","updateIndices","lists","i","length","addToLists","removeFromLists","render","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,aADG;AAEhBC,EAAAA,WAAW,EAAE,aAFG;AAGhBC,EAAAA,WAAW,EAAE;AAHG,CAAlB;;AAMA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BU,KAD0B,GAClB;AACNC,MAAAA,aAAa,EAAEN,SAAS,CAACC,WADnB;AAENM,MAAAA,SAAS,EAAEX,gBAAgB,CAACW,SAFtB;AAGNC,MAAAA,WAAW,EAAE;AAHP,KADkB;;AAAA,SAO1BC,MAP0B,GAOjB,MAAM;AACb,WAAKC,iBAAL,CAAuB,KAAKL,KAAL,CAAWM,IAAlC;AACA,WAAKC,QAAL,CAAc;AAACN,QAAAA,aAAa,EAAEN,SAAS,CAACC;AAA1B,OAAd;AACA,WAAKW,QAAL,CAAc;AAACJ,QAAAA,WAAW,EAAE;AAAd,OAAd;AACD,KAXyB;;AAAA,SAa1BK,QAb0B,GAadC,cAAD,IAAoB;AAC7B,WAAKF,QAAL,CAAc;AAACN,QAAAA,aAAa,EAAEN,SAAS,CAACE;AAA1B,OAAd;AACA,WAAKU,QAAL,CAAc;AAACJ,QAAAA,WAAW,EAAEM;AAAd,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkB,KAAKX,KAAL,CAAWG,WAAzC;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoB,KAAKX,KAAL,CAAWC,aAA3C;AACD,KAlByB;;AAAA,SAoB1BI,iBApB0B,GAoBLC,IAAD,IAAU;AAC5B,UAAIM,SAAS,GAAGN,IAAI,CAACO,GAArB,CAD4B,CAG5B;;AACA,UAAIC,QAAQ,GAAG,CAAC,GAAG,KAAKd,KAAL,CAAWE,SAAf,EAA0Ba,MAA1B,CAAiCT,IAAI,IAAIA,IAAI,CAACO,GAAL,KAAaD,SAAtD,CAAf;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ,EAL4B,CAM5B;;AACAA,MAAAA,QAAQ,GAAG,CAACR,IAAD,EAAO,GAAGQ,QAAV,CAAX;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ,EAR4B,CAS5B;;AACAA,MAAAA,QAAQ,GAAG,KAAKE,aAAL,CAAmBF,QAAnB,CAAX,CAV4B,CAY5B;;AACA,WAAKP,QAAL,CAAc;AAACL,QAAAA,SAAS,EAAEY;AAAZ,OAAd;AACD,KAlCyB;;AAAA,SAoC1BE,aApC0B,GAoCTC,KAAD,IAAW;AACzBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,KAAK,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClCD,QAAAA,KAAK,CAACC,CAAD,CAAL,CAASL,GAAT,GAAeK,CAAf;AACH;;AACD,aAAOD,KAAP;AACH,KA1C2B;;AAAA,SA6C1BG,UA7C0B,GA6CZd,IAAD,IAAU;AACrB,WAAKC,QAAL,CAAc;AAACL,QAAAA,SAAS,EAAE,CAACI,IAAD,EAAO,GAAG,KAAKN,KAAL,CAAWE,SAArB;AAAZ,OAAd;AACD,KA/CyB;;AAAA,SAiD1BmB,eAjD0B,GAiDPR,GAAD,IAAS;AACzB,WAAKN,QAAL,CAAc;AAACL,QAAAA,SAAS,EAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,SAAX,CAAqBa,MAArB,CAA4BT,IAAI,IAAIA,IAAI,CAACO,GAAL,KAAaA,GAAjD,CAAJ;AAAZ,OAAd;AACD,KAnDyB;AAAA;;AAqD1BS,EAAAA,MAAM,GAAG;AACP,YAAO,KAAKtB,KAAL,CAAWC,aAAlB;AACE,WAAKN,SAAS,CAACC,WAAf;AACE,eAAO,oBAAC,UAAD;AACP,UAAA,QAAQ,EAAE,KAAKY,QAAL,CAAce,IAAd,CAAmB,IAAnB,CADH;AAEP,UAAA,SAAS,EAAE,KAAKvB,KAAL,CAAWE,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAGF,WAAKP,SAAS,CAACE,WAAf;AACE,eAAO,oBAAC,UAAD;AACL,UAAA,MAAM,EAAE,KAAKO,MAAL,CAAYmB,IAAZ,CAAiB,IAAjB,CADH;AAEL,UAAA,QAAQ,EAAE,KAAKvB,KAAL,CAAWG,WAFhB;AAGL,UAAA,iBAAiB,EAAE,KAAKE,iBAAL,CAAuBkB,IAAvB,CAA4B,IAA5B,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAIF,WAAK5B,SAAS,CAACG,WAAf;AACE,eAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF;AACE,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AAbJ;AAeD;;AArEyB;;AAwE5B,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json'\nimport HomeScreen from './components/home_screen/HomeScreen'\nimport ItemScreen from './components/item_screen/ItemScreen'\nimport ListScreen from './components/list_screen/ListScreen'\n\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n}\n\nclass App extends Component {\n  state = {\n    currentScreen: AppScreen.HOME_SCREEN,\n    todoLists: testTodoListData.todoLists,\n    currentList: null\n  }\n\n  goHome = () => {\n    this.updateListChanges(this.state.list);\n    this.setState({currentScreen: AppScreen.HOME_SCREEN});\n    this.setState({currentList: null});\n  }\n\n  loadList = (todoListToLoad) => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    this.setState({currentList: todoListToLoad});\n    console.log(\"currentList: \" + this.state.currentList);\n    console.log(\"currentScreen: \" + this.state.currentScreen);\n  }\n\n  updateListChanges = (list) => {\n    let targetKey = list.key;\n\n    // Delete old version of list from lists\n    let newLists = [...this.state.todoLists].filter(list => list.key !== targetKey);\n    console.log(newLists);\n    // Add new version of list to top of lists\n    newLists = [list, ...newLists];\n    console.log(newLists);\n    //Reorder keys\n    newLists = this.updateIndices(newLists);\n\n    // Update state\n    this.setState({todoLists: newLists});\n  }\n\n  updateIndices = (lists) => {\n    console.log(lists);\n    for(var i = 0; i < lists.length; i++) {\n        lists[i].key = i;\n    }\n    return lists;\n}\n  \n  // Add to top of lists\n  addToLists = (list) => {\n    this.setState({todoLists: [list, ...this.state.todoLists]});\n  }\n  // Remove from lists\n  removeFromLists = (key) => {\n    this.setState({todoLists: [...this.state.todoLists.filter(list => list.key !== key)]});\n  }\n\n  render() {\n    switch(this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return <HomeScreen \n        loadList={this.loadList.bind(this)} \n        todoLists={this.state.todoLists} />;\n      case AppScreen.LIST_SCREEN:       \n        return <ListScreen\n          goHome={this.goHome.bind(this)}\n          todoList={this.state.currentList} \n          updateListChanges={this.updateListChanges.bind(this)} />;\n      case AppScreen.ITEM_SCREEN:\n        return <ItemScreen />;\n      default:\n        return <div>ERROR</div>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}