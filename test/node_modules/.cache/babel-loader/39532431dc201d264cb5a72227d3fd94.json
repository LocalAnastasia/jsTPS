{"ast":null,"code":"var _jsxFileName = \"/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/App.js\";\nimport React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json';\nimport HomeScreen from './components/home_screen/HomeScreen';\nimport ItemScreen from './components/item_screen/ItemScreen';\nimport ListScreen from './components/list_screen/ListScreen';\nimport jsTPS from './jsTPS/src/jsTPS/jsTPS.js';\nimport todoList from './jsTPS/test/demo/todoList.js';\nimport todoItem from './jsTPS/test/demo/todoItem.js';\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\",\n  MODAL_SCREEN: \"MODAL_SCREEN\"\n};\n\nclass App extends Component {\n  constructor() {\n    this.tps = new jsTPS();\n  }\n\n  render() {\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return React.createElement(HomeScreen, {\n          loadList: this.loadList.bind(this),\n          todoLists: this.state.todoLists,\n          createNewList: this.createListObject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        });\n\n      case AppScreen.LIST_SCREEN:\n        return React.createElement(ListScreen, {\n          tps: this.tps,\n          createNewItem: this.createListObjectItem,\n          deleteList: this.deleteList.bind(this),\n          goHome: this.goHome.bind(this),\n          goItem: this.goItem.bind(this),\n          todoList: this.state.currentList,\n          updateListChanges: this.updateListChanges.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        });\n\n      case AppScreen.ITEM_SCREEN:\n        return React.createElement(ItemScreen, {\n          createNewItem: this.createListObjectItem,\n          currentScreen: this.state.currentScreen,\n          todoItem: this.state.currentItem,\n          submitItem: this.submitItem.bind(this),\n          exitItem: this.exitItem.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, \"ERROR\");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/App.js"],"names":["React","Component","testTodoListData","HomeScreen","ItemScreen","ListScreen","jsTPS","todoList","todoItem","AppScreen","HOME_SCREEN","LIST_SCREEN","ITEM_SCREEN","MODAL_SCREEN","App","constructor","tps","render","state","currentScreen","loadList","bind","todoLists","createListObject","createListObjectItem","deleteList","goHome","goItem","currentList","updateListChanges","currentItem","submitItem","exitItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,aADG;AAEhBC,EAAAA,WAAW,EAAE,aAFG;AAGhBC,EAAAA,WAAW,EAAE,aAHG;AAIhBC,EAAAA,YAAY,EAAE;AAJE,CAAlB;;AAOA,MAAMC,GAAN,SAAkBb,SAAlB,CAA4B;AAE1Bc,EAAAA,WAAW,GAAG;AACZ,SAAKC,GAAL,GAAW,IAAIV,KAAJ,EAAX;AACD;;AAyIDW,EAAAA,MAAM,GAAG;AACP,YAAO,KAAKC,KAAL,CAAWC,aAAlB;AACE,WAAKV,SAAS,CAACC,WAAf;AACE,eAAO,oBAAC,UAAD;AACP,UAAA,QAAQ,EAAE,KAAKU,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CADH;AAEP,UAAA,SAAS,EAAE,KAAKH,KAAL,CAAWI,SAFf;AAGP,UAAA,aAAa,EAAE,KAAKC,gBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAIF,WAAKd,SAAS,CAACE,WAAf;AACE,eAAO,oBAAC,UAAD;AACL,UAAA,GAAG,EAAE,KAAKK,GADL;AAEL,UAAA,aAAa,EAAE,KAAKQ,oBAFf;AAGL,UAAA,UAAU,EAAE,KAAKC,UAAL,CAAgBJ,IAAhB,CAAqB,IAArB,CAHP;AAIL,UAAA,MAAM,EAAE,KAAKK,MAAL,CAAYL,IAAZ,CAAiB,IAAjB,CAJH;AAKL,UAAA,MAAM,EAAE,KAAKM,MAAL,CAAYN,IAAZ,CAAiB,IAAjB,CALH;AAML,UAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWU,WANhB;AAOL,UAAA,iBAAiB,EAAE,KAAKC,iBAAL,CAAuBR,IAAvB,CAA4B,IAA5B,CAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAQF,WAAKZ,SAAS,CAACG,WAAf;AACE,eAAO,oBAAC,UAAD;AACL,UAAA,aAAa,EAAE,KAAKY,oBADf;AAEL,UAAA,aAAa,EAAE,KAAKN,KAAL,CAAWC,aAFrB;AAGL,UAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWY,WAHhB;AAIL,UAAA,UAAU,EAAE,KAAKC,UAAL,CAAgBV,IAAhB,CAAqB,IAArB,CAJP;AAKL,UAAA,QAAQ,EAAE,KAAKW,QAAL,CAAcX,IAAd,CAAmB,IAAnB,CALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAMF;AACE,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AAvBJ;AAyBD;;AAvKyB;;AA0K5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json'\nimport HomeScreen from './components/home_screen/HomeScreen'\nimport ItemScreen from './components/item_screen/ItemScreen'\nimport ListScreen from './components/list_screen/ListScreen'\nimport jsTPS from './jsTPS/src/jsTPS/jsTPS.js'\nimport todoList from './jsTPS/test/demo/todoList.js'\nimport todoItem from './jsTPS/test/demo/todoItem.js'\n\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\",\n  MODAL_SCREEN: \"MODAL_SCREEN\"\n}\n\nclass App extends Component {\n  \n  constructor() {\n    this.tps = new jsTPS();\n  }\n\n  createListObjectItem = (item) => {\n    var key = item.key;\n    var description = item.description;\n    var assignedTo = item.assigned_to;\n    var dueDate = item.due_date;\n    var completed = item.completed;\n    var todoListObjectItem = new todoItem(key, description, assignedTo, dueDate, completed);\n\n    return todoListObjectItem;\n  }\n\n  createListObject = (list) => {\n    var todoListObject = null;\n\n    if (list) {\n      var key = list.key;\n      var name = list.name;\n      var owner = list.owner;\n      var items = [];\n      for (var i = 0; i < list.items.length; i++) {\n        var itemObject = this.createListObjectItem(list.items[i]);\n        items.push(itemObject);\n      }\n    }\n    else {\n      var key = this.state.todoLists.length;\n      var name = '';\n      var owner = '';\n      var items = [];\n    }\n\n    todoListObject = new todoList(key, name, owner, items);\n    return todoListObject;\n  }\n\n  initTodoLists = (todoLists) => {\n    var listOfTodoListsObject = []\n    for (var i = 0; i < todoLists.length; i++) {\n      listOfTodoListsObject.push(this.createListObject(todoLists[i]));\n    }\n    return listOfTodoListsObject;\n  }\n\n  state = {\n    currentScreen: AppScreen.HOME_SCREEN,\n    todoLists: this.initTodoLists(testTodoListData.todoLists),\n    currentList: null,\n    currentItem: null,\n    modalIsVisible: false\n  }\n\n  deleteList = () => {\n    let newLists = [...this.state.todoLists];\n    newLists = this.removeFromLists(newLists, this.state.currentList.key);\n    this.setState({todoLists: newLists});\n    this.setState({currentList: null});\n    this.setState({currentScreen: AppScreen.HOME_SCREEN});\n  }\n\n  goHome = () => {\n    this.tps.clearAllTransactions();\n    this.setState({currentList: null});\n    this.setState({currentScreen: AppScreen.HOME_SCREEN});\n  }\n\n  goItem = (item) => {\n    this.setState({currentScreen: AppScreen.ITEM_SCREEN});\n    this.setState({currentItem: item});\n  }\n  submitItem = (item) => {\n    this.updateItem(item);\n    this.exitItem();\n  }\n\n  exitItem = () => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    this.setState({currentItem: null});\n  }\n\n  updateItem = (newItem) => {\n    let newList = this.state.currentList;\n    let newItems = newList.getItems();\n    if (newItem.getKey() === newItems.length) { // If it is a new item\n      newItems = [...newItems, newItem];\n    }\n    else { // If it is an existing item\n      newItems = newItems.map(item => item.getKey() === newItem.getKey() ? newItem : item);\n    }\n    newList.setItems(newItems);\n    this.setState({currentList: newList});\n    this.updateListChanges(newList);\n  }\n\n  loadList = (todoListToLoad) => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    this.setState({currentList: todoListToLoad});\n  }\n\n  updateListChanges = (list) => {\n    let targetKey = list.key;\n\n    if (list.getName().trim() === \"\") {\n      list.setName(\"Untitled\");\n    }\n    \n    // Delete old version of list from lists, if it exists\n    let newLists = this.removeFromLists([...this.state.todoLists], targetKey);\n\n    // Add new version of list to top of lists\n    newLists = this.addToLists(newLists, this.createListObject(list));\n\n    //Reorder keys\n    newLists = this.updateIndices(newLists);\n\n    // Update state\n    this.setState({todoLists: newLists});\n  }\n\n  updateIndices = (lists) => {\n    for(var i = 0; i < lists.length; i++) {\n        lists[i].key = i;\n    }\n    return lists;\n  }\n  \n  // Add to top of lists\n  addToLists = (lists, list) => {\n    return [list, ...lists];\n  }\n  // Remove from lists\n  removeFromLists = (lists, targetKey) => {\n    let newLists = lists.filter(list => list.key !== targetKey);\n    return newLists;\n  }\n\n  render() {\n    switch(this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return <HomeScreen \n        loadList={this.loadList.bind(this)} \n        todoLists={this.state.todoLists}\n        createNewList={this.createListObject} />;\n      case AppScreen.LIST_SCREEN:  \n        return <ListScreen\n          tps={this.tps}\n          createNewItem={this.createListObjectItem}\n          deleteList={this.deleteList.bind(this)}\n          goHome={this.goHome.bind(this)}\n          goItem={this.goItem.bind(this)}\n          todoList={this.state.currentList} \n          updateListChanges={this.updateListChanges.bind(this)} />; \n      case AppScreen.ITEM_SCREEN:\n        return <ItemScreen \n          createNewItem={this.createListObjectItem}\n          currentScreen={this.state.currentScreen}\n          todoItem={this.state.currentItem}\n          submitItem={this.submitItem.bind(this)}\n          exitItem={this.exitItem.bind(this)} />;\n      default:\n        return <div>ERROR</div>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}