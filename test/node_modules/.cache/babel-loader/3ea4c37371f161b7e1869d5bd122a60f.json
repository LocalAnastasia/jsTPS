{"ast":null,"code":"var _jsxFileName = \"/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/components/list_screen/ListItemsTable.js\";\nimport React, { Component } from 'react';\nimport ListItemCard from './ListItemCard';\nexport class ListItemsTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoList: this.props.todoList,\n      items: this.props.todoList.getItems(),\n      taskSortToggle: true,\n      dueDateSortToggle: true,\n      completedSortToggle: true\n    };\n\n    this.updateIndices = items => {\n      for (var i = 0; i < items.length; i++) {\n        items[i].key = i;\n      }\n\n      return items;\n    };\n\n    this.sortByTask = () => {\n      let newItems = [...this.state.items];\n\n      if (this.state.taskSortToggle) {\n        // Ascending order\n        newItems.sort((a, b) => a.description > b.description ? 1 : -1);\n      } else {\n        // Descending order\n        newItems.sort((a, b) => a.description > b.description ? -1 : 1);\n      }\n\n      newItems = this.updateIndices(newItems);\n      this.props.tps.addTransaction(new modifyListItems_Transaction(this.state.todoList, newItems)); //this.setState({items: newItems});\n      //this.props.updateList(newItems);\n\n      this.setState({\n        taskSortToggle: !this.state.taskSortToggle\n      });\n      this.render();\n    };\n\n    this.sortByDueDate = () => {\n      let newItems = [...this.state.items];\n\n      if (this.state.dueDateSortToggle) {\n        // Ascending order\n        newItems.sort((a, b) => a.due_date > b.due_date ? 1 : -1);\n      } else {\n        // Descending order\n        newItems.sort((a, b) => a.due_date > b.due_date ? -1 : 1);\n      }\n\n      newItems = this.updateIndices(newItems);\n      this.setState({\n        items: newItems\n      });\n      this.props.updateList(newItems);\n      this.setState({\n        dueDateSortToggle: !this.state.dueDateSortToggle\n      });\n    };\n\n    this.sortByCompleted = () => {\n      let newItems = [...this.state.items];\n\n      if (this.state.completedSortToggle) {\n        // Ascending order\n        newItems.sort((a, b) => a.completed > b.completed ? 1 : -1);\n      } else {\n        // Descending order\n        newItems.sort((a, b) => a.completed > b.completed ? -1 : 1);\n      }\n\n      newItems = this.updateIndices(newItems);\n      this.setState({\n        items: newItems\n      });\n      this.props.updateList(newItems);\n      this.setState({\n        completedSortToggle: !this.state.completedSortToggle\n      });\n    };\n\n    this.swapItems = (items, key1, key2) => {\n      let temp = items[key1];\n      items[key1] = items[key2];\n      items[key2] = temp;\n      items = this.updateIndices(items);\n      return items;\n    };\n\n    this.moveItemUp = item => {\n      let newItems = [...this.state.items];\n\n      if (item.key > 0) {\n        newItems = this.swapItems(newItems, item.key, newItems[item.key - 1].key);\n      }\n\n      this.setState({\n        items: newItems\n      });\n      this.props.updateList(newItems);\n      this.resetAllSortToggle();\n    };\n\n    this.moveItemDown = item => {\n      let newItems = [...this.state.items];\n\n      if (item.key < newItems.length - 1) {\n        newItems = this.swapItems(newItems, item.key, newItems[item.key + 1].key);\n      }\n\n      this.setState({\n        items: newItems\n      });\n      this.props.updateList(newItems);\n      this.resetAllSortToggle();\n    };\n\n    this.deleteItem = item => {\n      let newItems = [...this.state.items].filter(x => x.key !== item.key);\n      newItems = this.updateIndices(newItems);\n      this.setState({\n        items: newItems\n      });\n      this.props.updateList(newItems);\n    };\n\n    this.resetAllSortToggle = () => {\n      this.setState({\n        taskSortToggle: true\n      });\n      this.setState({\n        dueDateSortToggle: true\n      });\n      this.setState({\n        completedSortToggle: true\n      });\n    };\n\n    this.getNewItem = () => {\n      let key = this.state.items.length;\n      let description = \"\";\n      let due_date = new Date().toISOString().split('T')[0];\n      let assigned_to = \"\";\n      let completed = false;\n      return {\n        \"key\": key,\n        \"description\": description,\n        \"due_date\": due_date,\n        \"assigned_to\": assigned_to,\n        \"completed\": completed\n      };\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"list_items_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list_item_header_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list_item_task_header\",\n      onClick: this.sortByTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Task\"), React.createElement(\"div\", {\n      className: \"list_item_due_date_header\",\n      onClick: this.sortByDueDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Due Date\"), React.createElement(\"div\", {\n      className: \"list_item_status_header\",\n      onClick: this.sortByCompleted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Status\")), this.state.items.map(todoItem => React.createElement(ListItemCard, {\n      key: todoItem.getKey(),\n      listItem: todoItem,\n      isFirst: todoItem.getKey() === 0,\n      isLast: todoItem.getKey() === this.state.items.length - 1,\n      moveItemUp: this.moveItemUp,\n      moveItemDown: this.moveItemDown,\n      deleteItem: this.deleteItem,\n      goItem: this.props.goItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"list_item_add_card\",\n      onClick: this.props.goItem.bind(this, this.props.createNewItem(this.getNewItem())),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"\\u2795\"));\n  }\n\n}\nexport default ListItemsTable;","map":{"version":3,"sources":["/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/components/list_screen/ListItemsTable.js"],"names":["React","Component","ListItemCard","ListItemsTable","state","todoList","props","items","getItems","taskSortToggle","dueDateSortToggle","completedSortToggle","updateIndices","i","length","key","sortByTask","newItems","sort","a","b","description","tps","addTransaction","modifyListItems_Transaction","setState","render","sortByDueDate","due_date","updateList","sortByCompleted","completed","swapItems","key1","key2","temp","moveItemUp","item","resetAllSortToggle","moveItemDown","deleteItem","filter","x","getNewItem","Date","toISOString","split","assigned_to","map","todoItem","getKey","goItem","bind","createNewItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ListItemCard from './ListItemCard'\n\nexport class ListItemsTable extends Component {\n\n    state = {\n        todoList: this.props.todoList,\n        items: this.props.todoList.getItems(),\n        taskSortToggle: true,\n        dueDateSortToggle: true,\n        completedSortToggle: true\n    }\n\n    updateIndices = (items) => {\n        for(var i = 0; i < items.length; i++) {\n            items[i].key = i;\n        }\n        return items;\n    }\n\n    sortByTask = () => {\n        let newItems = [...this.state.items];\n        if (this.state.taskSortToggle){\n            // Ascending order\n            newItems.sort((a, b) =>  a.description > b.description ? 1 : -1);\n        }\n        else{\n            // Descending order\n            newItems.sort((a, b) =>  a.description > b.description ? -1 : 1);\n        }\n        newItems = this.updateIndices(newItems);\n        this.props.tps.addTransaction(new modifyListItems_Transaction(this.state.todoList, newItems));\n        //this.setState({items: newItems});\n        //this.props.updateList(newItems);\n        this.setState({taskSortToggle: !this.state.taskSortToggle});\n        this.render()\n    }\n\n    sortByDueDate = () => {\n        let newItems = [...this.state.items];\n        if (this.state.dueDateSortToggle){\n            // Ascending order\n            newItems.sort((a, b) =>  a.due_date > b.due_date ? 1 : -1);\n        }\n        else{\n            // Descending order\n            newItems.sort((a, b) =>  a.due_date > b.due_date ? -1 : 1);\n        }\n        newItems = this.updateIndices(newItems);\n        this.setState({items: newItems});\n        this.props.updateList(newItems);\n        this.setState({dueDateSortToggle: !this.state.dueDateSortToggle});\n    }\n\n    sortByCompleted = () => {\n        let newItems = [...this.state.items];\n        if (this.state.completedSortToggle){\n            // Ascending order\n            newItems.sort((a, b) =>  a.completed > b.completed ? 1 : -1);\n        }\n        else{\n            // Descending order\n            newItems.sort((a, b) =>  a.completed > b.completed ? -1 : 1);\n        }\n        newItems = this.updateIndices(newItems);\n        this.setState({items: newItems});\n        this.props.updateList(newItems);\n        this.setState({completedSortToggle: !this.state.completedSortToggle});\n    }\n\n    swapItems = (items, key1, key2) => {\n        let temp = items[key1];\n        items[key1] = items[key2];\n        items[key2] = temp;\n        items = this.updateIndices(items);\n        return items;\n    }\n    moveItemUp = (item) => {\n        let newItems = [...this.state.items];\n        if (item.key > 0){\n            newItems = this.swapItems(newItems, item.key, newItems[item.key - 1].key);\n        }\n        this.setState({items: newItems});\n        this.props.updateList(newItems);\n        this.resetAllSortToggle();\n    }\n\n    moveItemDown = (item) => {\n        let newItems = [...this.state.items];\n        if (item.key < newItems.length - 1){\n            newItems = this.swapItems(newItems, item.key, newItems[item.key + 1].key);\n        }\n        this.setState({items: newItems});\n        this.props.updateList(newItems);\n        this.resetAllSortToggle();\n    }\n\n    deleteItem = (item) => {\n        let newItems = [...this.state.items].filter(x => x.key !== item.key);\n        newItems = this.updateIndices(newItems);\n        this.setState({items: newItems});\n        this.props.updateList(newItems);\n    }\n\n    resetAllSortToggle = () => {\n        this.setState({taskSortToggle: true});\n        this.setState({dueDateSortToggle: true});\n        this.setState({completedSortToggle: true});\n    }\n\n    getNewItem = () => {\n        let key = this.state.items.length;\n        let description = \"\";\n        let due_date = new Date().toISOString().split('T')[0];\n        let assigned_to = \"\";\n        let completed = false;\n\n        return {\"key\": key, \n                \"description\": description, \n                \"due_date\": due_date, \n                \"assigned_to\": assigned_to, \n                \"completed\": completed};\n    }\n\n    render() {\n        return (\n            <div id=\"list_items_container\">\n                <div className=\"list_item_header_card\">\n                    <div className=\"list_item_task_header\" onClick={this.sortByTask}>Task</div>\n                    <div className=\"list_item_due_date_header\" onClick={this.sortByDueDate}>Due Date</div>\n                    <div className=\"list_item_status_header\" onClick={this.sortByCompleted}>Status</div>\n                </div>\n                {\n                    this.state.items.map((todoItem)=>(\n                        <ListItemCard \n                            key={todoItem.getKey()}\n                            listItem={todoItem}\n                            isFirst={todoItem.getKey() === 0}\n                            isLast={todoItem.getKey() === this.state.items.length - 1}\n                            moveItemUp={this.moveItemUp}\n                            moveItemDown={this.moveItemDown}\n                            deleteItem={this.deleteItem}\n                            goItem={this.props.goItem}\n                            />\n                    ))\n                }\n                <div className='list_item_add_card' onClick={this.props.goItem.bind(this, this.props.createNewItem(this.getNewItem()))}>&#10133;</div>\n            </div>\n        )\n    }\n}\n\nexport default ListItemsTable\n"]},"metadata":{},"sourceType":"module"}