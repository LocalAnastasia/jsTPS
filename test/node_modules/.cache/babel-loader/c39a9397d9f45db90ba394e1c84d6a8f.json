{"ast":null,"code":"var _jsxFileName = \"/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/App.js\";\nimport React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json';\nimport HomeScreen from './components/home_screen/HomeScreen';\nimport ItemScreen from './components/item_screen/ItemScreen';\nimport ListScreen from './components/list_screen/ListScreen';\nimport jsTPS from './jsTPS/src/jsTPS/jsTPS.js';\nimport todoList from './jsTPS/test/demo/todoList.js';\nimport todoItem from './jsTPS/test/demo/todoItem.js';\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\",\n  MODAL_SCREEN: \"MODAL_SCREEN\"\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.tps = new jsTPS();\n\n    this.createListObjectItem = item => {\n      var key = item.key;\n      var description = item.description;\n      var assignedTo = item.assigned_to;\n      var dueDate = item.due_date;\n      var completed = item.completed;\n      var todoListObjectItem = new todoItem(key, description, assignedTo, dueDate, completed);\n      return todoListObjectItem;\n    };\n\n    this.createListObject = list => {\n      var todoListObject = null;\n\n      if (list) {\n        var key = list.key;\n        var name = list.name;\n        var owner = list.owner;\n        var items = [];\n\n        for (var i = 0; i < list.items.length; i++) {\n          var itemObject = this.createListObjectItem(list.items[i]);\n          items.push(itemObject);\n        }\n      } else {\n        var key = this.state.todoLists.length;\n        var name = '';\n        var owner = '';\n        var items = [];\n      }\n\n      todoListObject = new todoList(key, name, owner, items);\n      return todoListObject;\n    };\n\n    this.initTodoLists = todoLists => {\n      var listOfTodoListsObject = [];\n\n      for (var i = 0; i < todoLists.length; i++) {\n        listOfTodoListsObject.push(this.createListObject(todoLists[i]));\n      }\n\n      return listOfTodoListsObject;\n    };\n\n    this.state = {\n      currentScreen: AppScreen.HOME_SCREEN,\n      todoLists: this.initTodoLists(testTodoListData.todoLists),\n      currentList: null,\n      currentItem: null,\n      modalIsVisible: false\n    };\n\n    this.deleteList = () => {\n      let newLists = [...this.state.todoLists];\n      newLists = this.removeFromLists(newLists, this.state.currentList.key);\n      this.setState({\n        todoLists: newLists\n      });\n      this.setState({\n        currentList: null\n      });\n      this.setState({\n        currentScreen: AppScreen.HOME_SCREEN\n      });\n    };\n\n    this.goHome = () => {\n      this.tps.clearAllTransactions();\n      this.setState({\n        currentList: null\n      });\n      this.setState({\n        currentScreen: AppScreen.HOME_SCREEN\n      });\n    };\n\n    this.goItem = item => {\n      this.setState({\n        currentScreen: AppScreen.ITEM_SCREEN\n      });\n      this.setState({\n        currentItem: item\n      });\n    };\n\n    this.submitItem = item => {\n      this.updateItem(item);\n      this.exitItem();\n    };\n\n    this.exitItem = () => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      this.setState({\n        currentItem: null\n      });\n    };\n\n    this.updateItem = newItem => {\n      let newList = this.state.currentList;\n      let newItems = newList.getItems();\n\n      if (newItem.getKey() === newItems.length) {\n        // If it is a new item\n        newItems = [...newItems, newItem];\n      } else {\n        // If it is an existing item\n        newItems = newItems.map(item => item.getKey() === newItem.getKey() ? newItem : item);\n      }\n\n      newList.setItems(newItems);\n      this.setState({\n        currentList: newList\n      });\n      this.updateListChanges(newList);\n    };\n\n    this.loadList = todoListToLoad => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      this.setState({\n        currentList: todoListToLoad\n      });\n    };\n\n    this.updateListChanges = list => {\n      let targetKey = list.key;\n\n      if (list.getName().trim() === \"\") {\n        list.setName(\"Untitled\");\n      } // Delete old version of list from lists, if it exists\n\n\n      let newLists = this.removeFromLists([...this.state.todoLists], targetKey); // Add new version of list to top of lists\n\n      newLists = this.addToLists(newLists, this.createListObject(list)); //Reorder keys\n\n      newLists = this.updateIndices(newLists); // Update state\n\n      this.setState({\n        todoLists: newLists\n      });\n    };\n\n    this.updateIndices = lists => {\n      for (var i = 0; i < lists.length; i++) {\n        lists[i].key = i;\n      }\n\n      return lists;\n    };\n\n    this.addToLists = (lists, list) => {\n      return [list, ...lists];\n    };\n\n    this.removeFromLists = (lists, targetKey) => {\n      let newLists = lists.filter(list => list.key !== targetKey);\n      return newLists;\n    };\n  }\n\n  render() {\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return React.createElement(HomeScreen, {\n          loadList: this.loadList.bind(this),\n          todoLists: this.state.todoLists,\n          createNewList: this.createListObject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        });\n\n      case AppScreen.LIST_SCREEN:\n        return React.createElement(ListScreen, {\n          tps: this.tps,\n          createNewItem: this.createListObjectItem,\n          deleteList: this.deleteList.bind(this),\n          goHome: this.goHome.bind(this),\n          goItem: this.goItem.bind(this),\n          todoList: this.state.currentList,\n          updateListChanges: this.updateListChanges.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        });\n\n      case AppScreen.ITEM_SCREEN:\n        return React.createElement(ItemScreen, {\n          createNewItem: this.createListObjectItem,\n          currentScreen: this.state.currentScreen,\n          todoItem: this.state.currentItem,\n          submitItem: this.submitItem.bind(this),\n          exitItem: this.exitItem.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, \"ERROR\");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/App.js"],"names":["React","Component","testTodoListData","HomeScreen","ItemScreen","ListScreen","jsTPS","todoList","todoItem","AppScreen","HOME_SCREEN","LIST_SCREEN","ITEM_SCREEN","MODAL_SCREEN","App","tps","createListObjectItem","item","key","description","assignedTo","assigned_to","dueDate","due_date","completed","todoListObjectItem","createListObject","list","todoListObject","name","owner","items","i","length","itemObject","push","state","todoLists","initTodoLists","listOfTodoListsObject","currentScreen","currentList","currentItem","modalIsVisible","deleteList","newLists","removeFromLists","setState","goHome","clearAllTransactions","goItem","submitItem","updateItem","exitItem","newItem","newList","newItems","getItems","getKey","map","setItems","updateListChanges","loadList","todoListToLoad","targetKey","getName","trim","setName","addToLists","updateIndices","lists","filter","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json'\nimport HomeScreen from './components/home_screen/HomeScreen'\nimport ItemScreen from './components/item_screen/ItemScreen'\nimport ListScreen from './components/list_screen/ListScreen'\nimport jsTPS from './jsTPS/src/jsTPS/jsTPS.js'\nimport todoList from './jsTPS/test/demo/todoList.js'\nimport todoItem from './jsTPS/test/demo/todoItem.js'\n\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\",\n  MODAL_SCREEN: \"MODAL_SCREEN\"\n}\n\nclass App extends Component {\n  tps = new jsTPS();\n\n  createListObjectItem = (item) => {\n    var key = item.key;\n    var description = item.description;\n    var assignedTo = item.assigned_to;\n    var dueDate = item.due_date;\n    var completed = item.completed;\n    var todoListObjectItem = new todoItem(key, description, assignedTo, dueDate, completed);\n\n    return todoListObjectItem;\n  }\n\n  createListObject = (list) => {\n    var todoListObject = null;\n\n    if (list) {\n      var key = list.key;\n      var name = list.name;\n      var owner = list.owner;\n      var items = [];\n      for (var i = 0; i < list.items.length; i++) {\n        var itemObject = this.createListObjectItem(list.items[i]);\n        items.push(itemObject);\n      }\n    }\n    else {\n      var key = this.state.todoLists.length;\n      var name = '';\n      var owner = '';\n      var items = [];\n    }\n\n    todoListObject = new todoList(key, name, owner, items);\n    return todoListObject;\n  }\n\n  initTodoLists = (todoLists) => {\n    var listOfTodoListsObject = []\n    for (var i = 0; i < todoLists.length; i++) {\n      listOfTodoListsObject.push(this.createListObject(todoLists[i]));\n    }\n    return listOfTodoListsObject;\n  }\n\n  state = {\n    currentScreen: AppScreen.HOME_SCREEN,\n    todoLists: this.initTodoLists(testTodoListData.todoLists),\n    currentList: null,\n    currentItem: null,\n    modalIsVisible: false\n  }\n\n  deleteList = () => {\n    let newLists = [...this.state.todoLists];\n    newLists = this.removeFromLists(newLists, this.state.currentList.key);\n    this.setState({todoLists: newLists});\n    this.setState({currentList: null});\n    this.setState({currentScreen: AppScreen.HOME_SCREEN});\n  }\n\n  goHome = () => {\n    this.tps.clearAllTransactions();\n    this.setState({currentList: null});\n    this.setState({currentScreen: AppScreen.HOME_SCREEN});\n  }\n\n  goItem = (item) => {\n    this.setState({currentScreen: AppScreen.ITEM_SCREEN});\n    this.setState({currentItem: item});\n  }\n  submitItem = (item) => {\n    this.updateItem(item);\n    this.exitItem();\n  }\n\n  exitItem = () => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    this.setState({currentItem: null});\n  }\n\n  updateItem = (newItem) => {\n    let newList = this.state.currentList;\n    let newItems = newList.getItems();\n    if (newItem.getKey() === newItems.length) { // If it is a new item\n      newItems = [...newItems, newItem];\n    }\n    else { // If it is an existing item\n      newItems = newItems.map(item => item.getKey() === newItem.getKey() ? newItem : item);\n    }\n    newList.setItems(newItems);\n    this.setState({currentList: newList});\n    this.updateListChanges(newList);\n  }\n\n  loadList = (todoListToLoad) => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    this.setState({currentList: todoListToLoad});\n  }\n\n  updateListChanges = (list) => {\n    let targetKey = list.key;\n\n    if (list.getName().trim() === \"\") {\n      list.setName(\"Untitled\");\n    }\n    \n    // Delete old version of list from lists, if it exists\n    let newLists = this.removeFromLists([...this.state.todoLists], targetKey);\n\n    // Add new version of list to top of lists\n    newLists = this.addToLists(newLists, this.createListObject(list));\n\n    //Reorder keys\n    newLists = this.updateIndices(newLists);\n\n    // Update state\n    this.setState({todoLists: newLists});\n  }\n\n  updateIndices = (lists) => {\n    for(var i = 0; i < lists.length; i++) {\n        lists[i].key = i;\n    }\n    return lists;\n  }\n  \n  // Add to top of lists\n  addToLists = (lists, list) => {\n    return [list, ...lists];\n  }\n  // Remove from lists\n  removeFromLists = (lists, targetKey) => {\n    let newLists = lists.filter(list => list.key !== targetKey);\n    return newLists;\n  }\n\n  render() {\n    switch(this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return <HomeScreen \n        loadList={this.loadList.bind(this)} \n        todoLists={this.state.todoLists}\n        createNewList={this.createListObject} />;\n      case AppScreen.LIST_SCREEN:  \n        return <ListScreen\n          tps={this.tps}\n          createNewItem={this.createListObjectItem}\n          deleteList={this.deleteList.bind(this)}\n          goHome={this.goHome.bind(this)}\n          goItem={this.goItem.bind(this)}\n          todoList={this.state.currentList} \n          updateListChanges={this.updateListChanges.bind(this)} />; \n      case AppScreen.ITEM_SCREEN:\n        return <ItemScreen \n          createNewItem={this.createListObjectItem}\n          currentScreen={this.state.currentScreen}\n          todoItem={this.state.currentItem}\n          submitItem={this.submitItem.bind(this)}\n          exitItem={this.exitItem.bind(this)} />;\n      default:\n        return <div>ERROR</div>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}