{"ast":null,"code":"var _jsxFileName = \"/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/components/list_screen/ListScreen.js\";\nimport React, { Component } from 'react';\nimport ListHeading from './ListHeading';\nimport ListItemsTable from './ListItemsTable';\nimport ListTrash from './ListTrash';\nimport PropTypes from 'prop-types';\nimport changeListName_Transaction from '../list_transactions/changeListName_Transaction';\nimport changeListOwner_Transaction from '../list_transactions/changeListOwner_Transaction';\nimport modifyListItems_Transaction from '../list_transactions/modifyListItems_Transaction';\nimport modifyListItem_Transaction from '../list_transactions/modifyListItem_Transaction';\nexport class ListScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalIsVisible: false,\n      todoList: this.props.todoList\n    };\n\n    this.updateList = items => {\n      let newList = this.state.todoList;\n      newList.setItems(items);\n      this.setState({\n        todoList: newList\n      });\n    };\n\n    this.setListOwner = e => {\n      let newList = this.props.todoList;\n      let newOwner = e.target.value;\n      let transaction = new changeListOwner_Transaction(this.props.todoList, newOwner);\n      console.log(transaction);\n      this.tps.addTransaction(transaction);\n      newList.setName(newOwner);\n      this.setState({\n        todoList: newList\n      });\n    };\n\n    this.setListName = e => {\n      let newList = this.props.todoList;\n      let newName = e.target.value;\n      this.tps.addTransaction(new changeListName_Transaction(this.props.todoList, newName));\n      newList.setName(newName);\n      this.setState({\n        todoList: newList\n      });\n    };\n\n    this.showModal = () => {\n      this.setState({\n        modalIsVisible: true\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        modalIsVisible: false\n      });\n    };\n\n    this.deleteList = () => {\n      this.hideModal();\n      this.props.deleteList();\n    };\n\n    this.keydownFunction = this.keydownFunction.bind(this);\n    this.keyupFunction = this.keyupFunction.bind(this);\n    this.ctrl = false;\n    this.z = false;\n    this.y = false;\n  }\n\n  keydownFunction(e) {\n    switch (e.keyCode) {\n      case 17:\n        this.ctrl = true;\n        break;\n\n      case 90:\n        this.z = true;\n        break;\n\n      case 89:\n        this.y = true;\n        break;\n\n      default:\n        break;\n    }\n\n    if (this.ctrl && this.z) {\n      //UNDO \n      this.props.tps.undoTransaction();\n    } else if (this.ctrl && this.y) {\n      //REDO\n      this.props.tps.doTransaction();\n    }\n  }\n\n  keyupFunction(e) {\n    switch (e.keyCode) {\n      case 17:\n        this.ctrl = false;\n        break;\n\n      case 90:\n        this.z = false;\n        break;\n\n      case 89:\n        this.y = false;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.keydownFunction, false);\n    document.addEventListener(\"keyup\", this.keyupFunction, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.keydownFunction, false);\n    document.removeEventListener(\"keyup\", this.keyupFunction, false);\n  }\n\n  getListName() {\n    if (this.props.todoList) {\n      let name = this.props.todoList.getName();\n      return name;\n    } else return \"\";\n  }\n\n  getListOwner() {\n    if (this.props.todoList) {\n      let owner = this.props.todoList.getOwner();\n      return owner;\n    }\n  }\n\n  getModal() {\n    return this.state.modalIsVisible ? \"modal is_visible\" : \"modal\";\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"todo_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(ListHeading, {\n      goHome: this.props.goHome,\n      todoList: this.state.todoList,\n      updateListChanges: this.props.updateListChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(ListTrash, {\n      showModal: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"list_details_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"list_details_name_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_name_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      onChange: this.setListName,\n      defaultValue: this.getListName(),\n      type: \"text\",\n      id: \"list_name_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"list_details_owner_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_owner_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Owner:\"), React.createElement(\"input\", {\n      onChange: this.setListOwner,\n      defaultValue: this.getListOwner(),\n      type: \"text\",\n      id: \"list_owner_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))), React.createElement(ListItemsTable, {\n      goItem: this.props.goItem,\n      todoList: this.props.todoList,\n      updateList: this.updateList,\n      createNewItem: this.props.createNewItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: this.getModal(),\n      \"data-animation\": \"slideInOutLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal_dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"modal_header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Delete list?\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"modal_footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Are you sure you want to delete this list?\"), React.createElement(\"div\", {\n      id: \"modal_dialog_button_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"modal_dialog_button\",\n      onClick: this.deleteList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"YES\"), React.createElement(\"button\", {\n      className: \"modal_dialog_button\",\n      onClick: this.hideModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"NO\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"This list will not be retrievable.\"))));\n  }\n\n}\nexport default ListScreen;","map":{"version":3,"sources":["/Users/vincentchooi/Documents/University/CSE316/HW2/hw2/src/components/list_screen/ListScreen.js"],"names":["React","Component","ListHeading","ListItemsTable","ListTrash","PropTypes","changeListName_Transaction","changeListOwner_Transaction","modifyListItems_Transaction","modifyListItem_Transaction","ListScreen","constructor","props","state","modalIsVisible","todoList","updateList","items","newList","setItems","setState","setListOwner","e","newOwner","target","value","transaction","console","log","tps","addTransaction","setName","setListName","newName","showModal","hideModal","deleteList","keydownFunction","bind","keyupFunction","ctrl","z","y","keyCode","undoTransaction","doTransaction","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","getListName","name","getName","getListOwner","owner","getOwner","getModal","render","goHome","updateListChanges","goItem","createNewItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ListHeading from './ListHeading'\nimport ListItemsTable from './ListItemsTable'\nimport ListTrash from './ListTrash'\nimport PropTypes from 'prop-types';\nimport changeListName_Transaction from '../list_transactions/changeListName_Transaction'\nimport changeListOwner_Transaction from '../list_transactions/changeListOwner_Transaction'\nimport modifyListItems_Transaction from '../list_transactions/modifyListItems_Transaction'\nimport modifyListItem_Transaction from '../list_transactions/modifyListItem_Transaction'\n\nexport class ListScreen extends Component {\n\n    state = {\n        modalIsVisible: false,\n        todoList: this.props.todoList\n    }\n\n    constructor(props){\n        super(props);\n        this.keydownFunction = this.keydownFunction.bind(this);\n        this.keyupFunction = this.keyupFunction.bind(this);\n        this.ctrl = false;\n        this.z = false;\n        this.y = false;\n    }\n\n    keydownFunction(e) {\n        switch(e.keyCode) {\n            case 17:\n                this.ctrl = true;\n                break;\n            \n            case 90:\n                this.z = true;\n                break;\n            \n            case 89:\n                this.y = true;\n                break;\n            \n            default:\n                break;\n        }\n        \n        if (this.ctrl && this.z) { //UNDO \n            this.props.tps.undoTransaction();\n        }\n        else if (this.ctrl && this.y) { //REDO\n            this.props.tps.doTransaction();\n        }\n    }\n\n    keyupFunction(e) {\n        switch(e.keyCode) {\n            case 17:\n                this.ctrl = false;\n                break;\n            \n            case 90:\n                this.z = false;\n                break;\n            \n            case 89:\n                this.y = false;\n                break;\n\n            default:\n                break;\n        }   \n    }\n\n    componentDidMount(){\n        document.addEventListener(\"keydown\", this.keydownFunction, false);\n        document.addEventListener(\"keyup\", this.keyupFunction, false);\n    }\n    componentWillUnmount(){\n        document.removeEventListener(\"keydown\", this.keydownFunction, false);\n        document.removeEventListener(\"keyup\", this.keyupFunction, false);\n    }\n\n    updateList = (items) => {\n        let newList = this.state.todoList;\n        newList.setItems(items);\n        this.setState({todoList: newList});\n    }\n    setListOwner = (e) => {\n        let newList = this.props.todoList;\n        let newOwner = e.target.value;\n        let transaction = new changeListOwner_Transaction(this.props.todoList, newOwner);\n        console.log(transaction);\n        this.tps.addTransaction(transaction);\n        newList.setName(newOwner);\n        this.setState({todoList: newList});\n    }\n\n    setListName = (e) => {\n        let newList = this.props.todoList;\n        let newName = e.target.value;\n        this.tps.addTransaction(new changeListName_Transaction(this.props.todoList, newName));\n        newList.setName(newName);\n        this.setState({todoList: newList});\n    }\n\n    getListName() {\n        if (this.props.todoList) {\n            let name = this.props.todoList.getName();\n            return name;\n        }\n        else\n            return \"\";\n    }\n    getListOwner() {\n        if (this.props.todoList) {\n            let owner = this.props.todoList.getOwner();\n            return owner;\n        }\n    }\n    showModal = () => {\n        this.setState({modalIsVisible: true});\n    }\n    \n    hideModal = () => {\n        this.setState({modalIsVisible: false});\n    }\n\n    deleteList = () => {\n        this.hideModal();\n        this.props.deleteList();\n    }\n\n    getModal() {\n        return this.state.modalIsVisible ? \"modal is_visible\" : \"modal\";\n    }\n\n    render() {\n        return (\n            <div>\n                <div id=\"todo_list\">\n                    <ListHeading goHome={this.props.goHome}\n                                 todoList={this.state.todoList}\n                                 updateListChanges={this.props.updateListChanges} />\n                    <ListTrash showModal={this.showModal}/>\n                    <div id=\"list_details_container\">\n                        <div id=\"list_details_name_container\" className=\"text_toolbar\">\n                            <span id=\"list_name_prompt\" >Name:</span>\n                            <input \n                                onChange={this.setListName}\n                                defaultValue={this.getListName()} \n                                type=\"text\" \n                                id=\"list_name_textfield\" />\n                        </div>\n                        <div id=\"list_details_owner_container\" className=\"text_toolbar\" >\n                            <span id=\"list_owner_prompt\" >Owner:</span>\n                            <input \n                                onChange={this.setListOwner}\n                                defaultValue={this.getListOwner()}\n                                type=\"text\" \n                                id=\"list_owner_textfield\" />\n                        </div>\n                    </div>\n                    <ListItemsTable \n                        goItem={this.props.goItem}\n                        todoList={this.props.todoList}\n                        updateList={this.updateList}\n                        createNewItem={this.props.createNewItem} \n                    />\n                </div>\n                <div className={this.getModal()} data-animation={\"slideInOutLeft\"}>\n                    <div className=\"modal_dialog\">\n                        <p className=\"modal_header\">Delete list?</p>\n                        <br></br>\n                        <p className=\"modal_footer\">Are you sure you want to delete this list?</p>\n                        <div id=\"modal_dialog_button_container\"> \n                            <button className=\"modal_dialog_button\" onClick={this.deleteList}>YES</button>\n                            <button className=\"modal_dialog_button\" onClick={this.hideModal}>NO</button>\n                        </div>\n                        <p>This list will not be retrievable.</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListScreen\n"]},"metadata":{},"sourceType":"module"}